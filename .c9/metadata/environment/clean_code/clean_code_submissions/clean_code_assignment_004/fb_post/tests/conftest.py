{"changed":true,"filter":false,"title":"conftest.py","tooltip":"/clean_code/clean_code_submissions/clean_code_assignment_004/fb_post/tests/conftest.py","value":"from freezegun import freeze_time\nimport datetime\nimport pytest\nfrom fb_post.models import *\nfrom  fb_post.utils import *\nfrom django.utils import timezone\n\npytestmark=pytest.mark.django_db\n\n\n@pytest.fixture\n@freeze_time(\"2012-01-14\")\ndef data_pop():\n    \n    user_objs=User.objects.bulk_create(\n        [User(name=user['name'],profile_pic=user['profile_pic']) for user in users_list ]\n        )\n    \n    post_objs=Post.objects.bulk_create(\n        [Post(posted_by_id=post['posted_by_id'],content=post['content']) for post in posts_list]\n        )\n    \n    comment_objs=Comment.objects.bulk_create(\n        [Comment(\n            commented_by_id=comment['commented_by_id'],\n            content=comment['content'] ,\n            post_id=comment['post_id'],\n            parent_comment_id =comment['parent_comment_id']\n        )\n        for comment in comments_list\n        ]\n    )\n    \n    reaction_objs=Reaction.objects.bulk_create(\n        [Reaction(\n                reacted_by_id=reaction['reacted_by_id'],\n                post_id=reaction['post_id'],\n                comment_id=reaction['comment_id'],\n                reaction=reaction['reaction']\n        )\n        for reaction in   reactions_list \n        ]\n    )\n    \n    dict_data={\n        'user_objs':user_objs,\n        'post_objs':post_objs,\n        'comment_objs':comment_objs,\n        'reaction_objs':reaction_objs\n    }\n    \n    return dict_data\n","undoManager":{"mark":-2,"position":9,"stack":[[{"start":{"row":0,"column":0},"end":{"row":42,"column":0},"action":"insert","lines":["@pytest.fixture","@freeze_time(\"2012-01-14\")","def data_pop():","    ","    user_objs=User.objects.bulk_create(","        [User(name=user['name'],profile_pic=user['profile_pic']) for user in users_list ]","        )","    ","    post_objs=Post.objects.bulk_create(","        [Post(posted_by_id=post['posted_by_id'],content=post['content']) for post in posts_list]","        )","    ","    comment_objs=Comment.objects.bulk_create(","        [Comment(","            commented_by_id=comment['commented_by_id'],","            content=comment['content'] ,","            post_id=comment['post_id'],","            parent_comment_id =comment['parent_comment_id']","        )","        for comment in comments_list","        ]","    )","    ","    reaction_objs=Reaction.objects.bulk_create(","        [Reaction(","                reacted_by_id=reaction['reacted_by_id'],","                post_id=reaction['post_id'],","                comment_id=reaction['comment_id'],","                reaction=reaction['reaction']","        )","        for reaction in   reactions_list ","        ]","    )","    ","    dict_data={","        'user_objs':user_objs,","        'post_objs':post_objs,","        'comment_objs':comment_objs,","        'reaction_objs':reaction_objs","    }","    ","    return dict_data",""],"id":1}],[{"start":{"row":0,"column":0},"end":{"row":1,"column":0},"action":"insert","lines":["",""],"id":2},{"start":{"row":1,"column":0},"end":{"row":2,"column":0},"action":"insert","lines":["",""]},{"start":{"row":2,"column":0},"end":{"row":3,"column":0},"action":"insert","lines":["",""]}],[{"start":{"row":0,"column":0},"end":{"row":8,"column":0},"action":"insert","lines":["from django.test import TestCase","from freezegun import freeze_time","import datetime","import pytest","from .models import *","from  .utils import *","from django.utils import timezone","from .constants import *",""],"id":3}],[{"start":{"row":0,"column":0},"end":{"row":0,"column":32},"action":"remove","lines":["from django.test import TestCase"],"id":4},{"start":{"row":0,"column":0},"end":{"row":1,"column":0},"action":"remove","lines":["",""]}],[{"start":{"row":3,"column":5},"end":{"row":3,"column":6},"action":"insert","lines":["f"],"id":5},{"start":{"row":3,"column":6},"end":{"row":3,"column":7},"action":"insert","lines":["b"]},{"start":{"row":3,"column":7},"end":{"row":3,"column":8},"action":"insert","lines":["_"]}],[{"start":{"row":3,"column":8},"end":{"row":3,"column":9},"action":"insert","lines":["p"],"id":6},{"start":{"row":3,"column":9},"end":{"row":3,"column":10},"action":"insert","lines":["o"]},{"start":{"row":3,"column":10},"end":{"row":3,"column":11},"action":"insert","lines":["s"]},{"start":{"row":3,"column":11},"end":{"row":3,"column":12},"action":"insert","lines":["t"]}],[{"start":{"row":6,"column":0},"end":{"row":7,"column":0},"action":"remove","lines":["from .constants import *",""],"id":7}],[{"start":{"row":7,"column":0},"end":{"row":8,"column":0},"action":"insert","lines":["pytestmark=pytest.mark.django_db",""],"id":8}],[{"start":{"row":4,"column":6},"end":{"row":4,"column":7},"action":"insert","lines":["f"],"id":9},{"start":{"row":4,"column":7},"end":{"row":4,"column":8},"action":"insert","lines":["b"]},{"start":{"row":4,"column":8},"end":{"row":4,"column":9},"action":"insert","lines":["_"]},{"start":{"row":4,"column":9},"end":{"row":4,"column":10},"action":"insert","lines":["p"]},{"start":{"row":4,"column":10},"end":{"row":4,"column":11},"action":"insert","lines":["o"]},{"start":{"row":4,"column":11},"end":{"row":4,"column":12},"action":"insert","lines":["s"]}],[{"start":{"row":4,"column":12},"end":{"row":4,"column":13},"action":"insert","lines":["t"],"id":10}]]},"ace":{"folds":[],"scrolltop":0,"scrollleft":0,"selection":{"start":{"row":11,"column":26},"end":{"row":11,"column":26},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":0},"timestamp":1587710652060}