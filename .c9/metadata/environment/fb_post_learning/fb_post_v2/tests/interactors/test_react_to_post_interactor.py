{"filter":false,"title":"test_react_to_post_interactor.py","tooltip":"/fb_post_learning/fb_post_v2/tests/interactors/test_react_to_post_interactor.py","undoManager":{"mark":104,"position":100,"stack":[[{"start":{"row":31,"column":20},"end":{"row":31,"column":24},"action":"insert","lines":["    "],"id":513}],[{"start":{"row":31,"column":24},"end":{"row":31,"column":28},"action":"insert","lines":["    "],"id":514}],[{"start":{"row":31,"column":28},"end":{"row":31,"column":32},"action":"insert","lines":["    "],"id":515}],[{"start":{"row":31,"column":32},"end":{"row":31,"column":36},"action":"insert","lines":["    "],"id":516}],[{"start":{"row":31,"column":36},"end":{"row":31,"column":40},"action":"insert","lines":["    "],"id":517}],[{"start":{"row":31,"column":40},"end":{"row":31,"column":44},"action":"insert","lines":["    "],"id":518}],[{"start":{"row":31,"column":40},"end":{"row":31,"column":44},"action":"remove","lines":["    "],"id":519}],[{"start":{"row":31,"column":40},"end":{"row":31,"column":41},"action":"insert","lines":[" "],"id":520},{"start":{"row":31,"column":41},"end":{"row":31,"column":42},"action":"insert","lines":[" "]},{"start":{"row":31,"column":42},"end":{"row":31,"column":43},"action":"insert","lines":[" "]},{"start":{"row":31,"column":43},"end":{"row":31,"column":44},"action":"insert","lines":["r"]},{"start":{"row":31,"column":44},"end":{"row":31,"column":45},"action":"insert","lines":["e"]},{"start":{"row":31,"column":45},"end":{"row":31,"column":46},"action":"insert","lines":["a"]},{"start":{"row":31,"column":46},"end":{"row":31,"column":47},"action":"insert","lines":["c"]},{"start":{"row":31,"column":47},"end":{"row":31,"column":48},"action":"insert","lines":["t"]}],[{"start":{"row":31,"column":48},"end":{"row":31,"column":49},"action":"insert","lines":["i"],"id":521},{"start":{"row":31,"column":49},"end":{"row":31,"column":50},"action":"insert","lines":["o"]},{"start":{"row":31,"column":50},"end":{"row":31,"column":51},"action":"insert","lines":["n"]},{"start":{"row":31,"column":51},"end":{"row":31,"column":52},"action":"insert","lines":["_"]},{"start":{"row":31,"column":52},"end":{"row":31,"column":53},"action":"insert","lines":["s"]},{"start":{"row":31,"column":53},"end":{"row":31,"column":54},"action":"insert","lines":["t"]},{"start":{"row":31,"column":54},"end":{"row":31,"column":55},"action":"insert","lines":["o"]},{"start":{"row":31,"column":55},"end":{"row":31,"column":56},"action":"insert","lines":["r"]}],[{"start":{"row":31,"column":56},"end":{"row":31,"column":57},"action":"insert","lines":["a"],"id":522},{"start":{"row":31,"column":57},"end":{"row":31,"column":58},"action":"insert","lines":["g"]},{"start":{"row":31,"column":58},"end":{"row":31,"column":59},"action":"insert","lines":["a"]}],[{"start":{"row":30,"column":43},"end":{"row":31,"column":0},"action":"insert","lines":["",""],"id":523},{"start":{"row":31,"column":0},"end":{"row":31,"column":12},"action":"insert","lines":["            "]}],[{"start":{"row":32,"column":42},"end":{"row":32,"column":43},"action":"remove","lines":[" "],"id":524},{"start":{"row":32,"column":41},"end":{"row":32,"column":42},"action":"remove","lines":[" "]},{"start":{"row":32,"column":40},"end":{"row":32,"column":41},"action":"remove","lines":[" "]},{"start":{"row":32,"column":36},"end":{"row":32,"column":40},"action":"remove","lines":["    "]},{"start":{"row":32,"column":32},"end":{"row":32,"column":36},"action":"remove","lines":["    "]},{"start":{"row":32,"column":28},"end":{"row":32,"column":32},"action":"remove","lines":["    "]},{"start":{"row":32,"column":24},"end":{"row":32,"column":28},"action":"remove","lines":["    "]},{"start":{"row":32,"column":20},"end":{"row":32,"column":24},"action":"remove","lines":["    "]},{"start":{"row":32,"column":16},"end":{"row":32,"column":20},"action":"remove","lines":["    "]},{"start":{"row":32,"column":12},"end":{"row":32,"column":16},"action":"remove","lines":["    "]}],[{"start":{"row":32,"column":27},"end":{"row":32,"column":28},"action":"remove","lines":["a"],"id":525}],[{"start":{"row":32,"column":27},"end":{"row":32,"column":28},"action":"insert","lines":["e"],"id":526}],[{"start":{"row":32,"column":28},"end":{"row":32,"column":29},"action":"insert","lines":[" "],"id":527}],[{"start":{"row":32,"column":28},"end":{"row":32,"column":29},"action":"remove","lines":[" "],"id":528}],[{"start":{"row":32,"column":28},"end":{"row":32,"column":29},"action":"insert","lines":["="],"id":529},{"start":{"row":32,"column":29},"end":{"row":32,"column":30},"action":"insert","lines":["r"]},{"start":{"row":32,"column":30},"end":{"row":32,"column":31},"action":"insert","lines":["e"]},{"start":{"row":32,"column":31},"end":{"row":32,"column":32},"action":"insert","lines":["a"]},{"start":{"row":32,"column":32},"end":{"row":32,"column":33},"action":"insert","lines":["c"]},{"start":{"row":32,"column":33},"end":{"row":32,"column":34},"action":"insert","lines":["t"]}],[{"start":{"row":32,"column":34},"end":{"row":32,"column":35},"action":"insert","lines":["i"],"id":530},{"start":{"row":32,"column":35},"end":{"row":32,"column":36},"action":"insert","lines":["o"]},{"start":{"row":32,"column":36},"end":{"row":32,"column":37},"action":"insert","lines":["n"]}],[{"start":{"row":32,"column":29},"end":{"row":32,"column":37},"action":"remove","lines":["reaction"],"id":531},{"start":{"row":32,"column":29},"end":{"row":32,"column":45},"action":"insert","lines":["reaction_storage"]}],[{"start":{"row":32,"column":45},"end":{"row":32,"column":46},"action":"insert","lines":[","],"id":532}],[{"start":{"row":33,"column":42},"end":{"row":33,"column":43},"action":"remove","lines":[" "],"id":533},{"start":{"row":33,"column":41},"end":{"row":33,"column":42},"action":"remove","lines":[" "]},{"start":{"row":33,"column":40},"end":{"row":33,"column":41},"action":"remove","lines":[" "]},{"start":{"row":33,"column":36},"end":{"row":33,"column":40},"action":"remove","lines":["    "]},{"start":{"row":33,"column":32},"end":{"row":33,"column":36},"action":"remove","lines":["    "]},{"start":{"row":33,"column":28},"end":{"row":33,"column":32},"action":"remove","lines":["    "]},{"start":{"row":33,"column":24},"end":{"row":33,"column":28},"action":"remove","lines":["    "]},{"start":{"row":33,"column":20},"end":{"row":33,"column":24},"action":"remove","lines":["    "]},{"start":{"row":33,"column":16},"end":{"row":33,"column":20},"action":"remove","lines":["    "]},{"start":{"row":33,"column":12},"end":{"row":33,"column":16},"action":"remove","lines":["    "]}],[{"start":{"row":33,"column":31},"end":{"row":34,"column":0},"action":"insert","lines":["",""],"id":534},{"start":{"row":34,"column":0},"end":{"row":34,"column":12},"action":"insert","lines":["            "]}],[{"start":{"row":34,"column":8},"end":{"row":34,"column":12},"action":"remove","lines":["    "],"id":535}],[{"start":{"row":36,"column":8},"end":{"row":36,"column":9},"action":"insert","lines":["r"],"id":536},{"start":{"row":36,"column":9},"end":{"row":36,"column":10},"action":"insert","lines":["e"]},{"start":{"row":36,"column":10},"end":{"row":36,"column":11},"action":"insert","lines":["a"]},{"start":{"row":36,"column":11},"end":{"row":36,"column":12},"action":"insert","lines":["c"]},{"start":{"row":36,"column":12},"end":{"row":36,"column":13},"action":"insert","lines":["t"]},{"start":{"row":36,"column":13},"end":{"row":36,"column":14},"action":"insert","lines":["i"]},{"start":{"row":36,"column":14},"end":{"row":36,"column":15},"action":"insert","lines":["o"]},{"start":{"row":36,"column":15},"end":{"row":36,"column":16},"action":"insert","lines":["n"]},{"start":{"row":36,"column":16},"end":{"row":36,"column":17},"action":"insert","lines":["_"]}],[{"start":{"row":45,"column":8},"end":{"row":45,"column":9},"action":"insert","lines":["r"],"id":537},{"start":{"row":45,"column":9},"end":{"row":45,"column":10},"action":"insert","lines":["e"]},{"start":{"row":45,"column":10},"end":{"row":45,"column":11},"action":"insert","lines":["a"]},{"start":{"row":45,"column":11},"end":{"row":45,"column":12},"action":"insert","lines":["c"]},{"start":{"row":45,"column":12},"end":{"row":45,"column":13},"action":"insert","lines":["t"]},{"start":{"row":45,"column":13},"end":{"row":45,"column":14},"action":"insert","lines":["i"]},{"start":{"row":45,"column":14},"end":{"row":45,"column":15},"action":"insert","lines":["o"]},{"start":{"row":45,"column":15},"end":{"row":45,"column":16},"action":"insert","lines":["n"]}],[{"start":{"row":45,"column":16},"end":{"row":45,"column":17},"action":"insert","lines":["_"],"id":538}],[{"start":{"row":45,"column":66},"end":{"row":46,"column":0},"action":"insert","lines":["",""],"id":539},{"start":{"row":46,"column":0},"end":{"row":46,"column":12},"action":"insert","lines":["            "]}],[{"start":{"row":46,"column":27},"end":{"row":47,"column":0},"action":"insert","lines":["",""],"id":540},{"start":{"row":47,"column":0},"end":{"row":47,"column":12},"action":"insert","lines":["            "]}],[{"start":{"row":47,"column":8},"end":{"row":47,"column":12},"action":"remove","lines":["    "],"id":541}],[{"start":{"row":48,"column":8},"end":{"row":48,"column":9},"action":"insert","lines":["r"],"id":542},{"start":{"row":48,"column":9},"end":{"row":48,"column":10},"action":"insert","lines":["e"]},{"start":{"row":48,"column":10},"end":{"row":48,"column":11},"action":"insert","lines":["a"]},{"start":{"row":48,"column":11},"end":{"row":48,"column":12},"action":"insert","lines":["c"]},{"start":{"row":48,"column":12},"end":{"row":48,"column":13},"action":"insert","lines":["t"]},{"start":{"row":48,"column":13},"end":{"row":48,"column":14},"action":"insert","lines":["i"]},{"start":{"row":48,"column":14},"end":{"row":48,"column":15},"action":"insert","lines":["o"]},{"start":{"row":48,"column":15},"end":{"row":48,"column":16},"action":"insert","lines":["n"]},{"start":{"row":48,"column":16},"end":{"row":48,"column":17},"action":"insert","lines":["_"]}],[{"start":{"row":59,"column":7},"end":{"row":63,"column":0},"action":"remove","lines":[" storage = create_autospec(StorageInterface)","        presenter = create_autospec(PresenterInterface)","        interactor = ReactToPostInteractor(storage=storage,","                                           presenter=presenter)",""],"id":543},{"start":{"row":59,"column":7},"end":{"row":67,"column":0},"action":"insert","lines":["post_storage = create_autospec(PostStorageInterface)","        reaction_storage = create_autospec(ReactionStorageInterface)","        presenter = create_autospec(PresenterInterface)","        interactor = ReactToPostInteractor(","            post_storage=post_storage,","            reaction_storage=reaction_storage,","            presenter=presenter","        )",""]}],[{"start":{"row":59,"column":7},"end":{"row":59,"column":8},"action":"insert","lines":[" "],"id":544}],[{"start":{"row":90,"column":8},"end":{"row":94,"column":0},"action":"remove","lines":["storage = create_autospec(StorageInterface)","        presenter = create_autospec(PresenterInterface)","        interactor = ReactToPostInteractor(storage=storage,","                                           presenter=presenter)",""],"id":545},{"start":{"row":90,"column":8},"end":{"row":98,"column":0},"action":"insert","lines":["post_storage = create_autospec(PostStorageInterface)","        reaction_storage = create_autospec(ReactionStorageInterface)","        presenter = create_autospec(PresenterInterface)","        interactor = ReactToPostInteractor(","            post_storage=post_storage,","            reaction_storage=reaction_storage,","            presenter=presenter","        )",""]}],[{"start":{"row":122,"column":8},"end":{"row":126,"column":0},"action":"remove","lines":["storage = create_autospec(StorageInterface)","        presenter = create_autospec(PresenterInterface)","        interactor = ReactToPostInteractor(storage=storage,","                                           presenter=presenter)",""],"id":546},{"start":{"row":122,"column":8},"end":{"row":130,"column":0},"action":"insert","lines":["post_storage = create_autospec(PostStorageInterface)","        reaction_storage = create_autospec(ReactionStorageInterface)","        presenter = create_autospec(PresenterInterface)","        interactor = ReactToPostInteractor(","            post_storage=post_storage,","            reaction_storage=reaction_storage,","            presenter=presenter","        )",""]}],[{"start":{"row":68,"column":8},"end":{"row":68,"column":9},"action":"insert","lines":["r"],"id":547},{"start":{"row":68,"column":9},"end":{"row":68,"column":10},"action":"insert","lines":["e"]},{"start":{"row":68,"column":10},"end":{"row":68,"column":11},"action":"insert","lines":["a"]},{"start":{"row":68,"column":11},"end":{"row":68,"column":12},"action":"insert","lines":["c"]},{"start":{"row":68,"column":12},"end":{"row":68,"column":13},"action":"insert","lines":["t"]},{"start":{"row":68,"column":13},"end":{"row":68,"column":14},"action":"insert","lines":["i"]},{"start":{"row":68,"column":14},"end":{"row":68,"column":15},"action":"insert","lines":["o"]},{"start":{"row":68,"column":15},"end":{"row":68,"column":16},"action":"insert","lines":["n"]},{"start":{"row":68,"column":16},"end":{"row":68,"column":17},"action":"insert","lines":["_"]}],[{"start":{"row":78,"column":8},"end":{"row":78,"column":9},"action":"insert","lines":["r"],"id":548},{"start":{"row":78,"column":9},"end":{"row":78,"column":10},"action":"insert","lines":["e"]},{"start":{"row":78,"column":10},"end":{"row":78,"column":11},"action":"insert","lines":["c"]},{"start":{"row":78,"column":11},"end":{"row":78,"column":12},"action":"insert","lines":["t"]},{"start":{"row":78,"column":12},"end":{"row":78,"column":13},"action":"insert","lines":["i"]},{"start":{"row":78,"column":13},"end":{"row":78,"column":14},"action":"insert","lines":["o"]},{"start":{"row":78,"column":14},"end":{"row":78,"column":15},"action":"insert","lines":["n"]}],[{"start":{"row":78,"column":15},"end":{"row":78,"column":16},"action":"insert","lines":["_"],"id":549}],[{"start":{"row":78,"column":65},"end":{"row":79,"column":0},"action":"insert","lines":["",""],"id":550},{"start":{"row":79,"column":0},"end":{"row":79,"column":12},"action":"insert","lines":["            "]}],[{"start":{"row":80,"column":8},"end":{"row":80,"column":9},"action":"insert","lines":["r"],"id":551},{"start":{"row":80,"column":9},"end":{"row":80,"column":10},"action":"insert","lines":["e"]},{"start":{"row":80,"column":10},"end":{"row":80,"column":11},"action":"insert","lines":["a"]},{"start":{"row":80,"column":11},"end":{"row":80,"column":12},"action":"insert","lines":["c"]},{"start":{"row":80,"column":12},"end":{"row":80,"column":13},"action":"insert","lines":["t"]},{"start":{"row":80,"column":13},"end":{"row":80,"column":14},"action":"insert","lines":["i"]},{"start":{"row":80,"column":14},"end":{"row":80,"column":15},"action":"insert","lines":["o"]},{"start":{"row":80,"column":15},"end":{"row":80,"column":16},"action":"insert","lines":["n"]}],[{"start":{"row":80,"column":16},"end":{"row":80,"column":17},"action":"insert","lines":["_"],"id":552}],[{"start":{"row":78,"column":10},"end":{"row":78,"column":11},"action":"insert","lines":["a"],"id":553}],[{"start":{"row":100,"column":8},"end":{"row":100,"column":9},"action":"insert","lines":["r"],"id":554},{"start":{"row":100,"column":9},"end":{"row":100,"column":10},"action":"insert","lines":["e"]},{"start":{"row":100,"column":10},"end":{"row":100,"column":11},"action":"insert","lines":["a"]},{"start":{"row":100,"column":11},"end":{"row":100,"column":12},"action":"insert","lines":["c"]},{"start":{"row":100,"column":12},"end":{"row":100,"column":13},"action":"insert","lines":["t"]},{"start":{"row":100,"column":13},"end":{"row":100,"column":14},"action":"insert","lines":["i"]},{"start":{"row":100,"column":14},"end":{"row":100,"column":15},"action":"insert","lines":["o"]},{"start":{"row":100,"column":15},"end":{"row":100,"column":16},"action":"insert","lines":["n"]},{"start":{"row":100,"column":16},"end":{"row":100,"column":17},"action":"insert","lines":["_"]}],[{"start":{"row":109,"column":8},"end":{"row":109,"column":9},"action":"insert","lines":["r"],"id":555},{"start":{"row":109,"column":9},"end":{"row":109,"column":10},"action":"insert","lines":["e"]},{"start":{"row":109,"column":10},"end":{"row":109,"column":11},"action":"insert","lines":["a"]},{"start":{"row":109,"column":11},"end":{"row":109,"column":12},"action":"insert","lines":["c"]},{"start":{"row":109,"column":12},"end":{"row":109,"column":13},"action":"insert","lines":["t"]},{"start":{"row":109,"column":13},"end":{"row":109,"column":14},"action":"insert","lines":["i"]},{"start":{"row":109,"column":14},"end":{"row":109,"column":15},"action":"insert","lines":["o"]},{"start":{"row":109,"column":15},"end":{"row":109,"column":16},"action":"insert","lines":["n"]},{"start":{"row":109,"column":16},"end":{"row":109,"column":17},"action":"insert","lines":["_"]}],[{"start":{"row":110,"column":8},"end":{"row":110,"column":9},"action":"insert","lines":["r"],"id":556},{"start":{"row":110,"column":9},"end":{"row":110,"column":10},"action":"insert","lines":["e"]},{"start":{"row":110,"column":10},"end":{"row":110,"column":11},"action":"insert","lines":["a"]},{"start":{"row":110,"column":11},"end":{"row":110,"column":12},"action":"insert","lines":["c"]},{"start":{"row":110,"column":12},"end":{"row":110,"column":13},"action":"insert","lines":["t"]},{"start":{"row":110,"column":13},"end":{"row":110,"column":14},"action":"insert","lines":["i"]},{"start":{"row":110,"column":14},"end":{"row":110,"column":15},"action":"insert","lines":["o"]},{"start":{"row":110,"column":15},"end":{"row":110,"column":16},"action":"insert","lines":["n"]},{"start":{"row":110,"column":16},"end":{"row":110,"column":17},"action":"insert","lines":["_"]}],[{"start":{"row":109,"column":66},"end":{"row":110,"column":0},"action":"insert","lines":["",""],"id":557},{"start":{"row":110,"column":0},"end":{"row":110,"column":12},"action":"insert","lines":["            "]}],[{"start":{"row":133,"column":8},"end":{"row":133,"column":9},"action":"insert","lines":["r"],"id":558},{"start":{"row":133,"column":9},"end":{"row":133,"column":10},"action":"insert","lines":["e"]},{"start":{"row":133,"column":10},"end":{"row":133,"column":11},"action":"insert","lines":["a"]}],[{"start":{"row":133,"column":10},"end":{"row":133,"column":11},"action":"remove","lines":["a"],"id":559},{"start":{"row":133,"column":9},"end":{"row":133,"column":10},"action":"remove","lines":["e"]},{"start":{"row":133,"column":8},"end":{"row":133,"column":9},"action":"remove","lines":["r"]}],[{"start":{"row":133,"column":8},"end":{"row":133,"column":9},"action":"insert","lines":["p"],"id":560},{"start":{"row":133,"column":9},"end":{"row":133,"column":10},"action":"insert","lines":["o"]},{"start":{"row":133,"column":10},"end":{"row":133,"column":11},"action":"insert","lines":["s"]},{"start":{"row":133,"column":11},"end":{"row":133,"column":12},"action":"insert","lines":["t"]},{"start":{"row":133,"column":12},"end":{"row":133,"column":13},"action":"insert","lines":["_"]}],[{"start":{"row":78,"column":15},"end":{"row":78,"column":16},"action":"remove","lines":["n"],"id":561},{"start":{"row":78,"column":14},"end":{"row":78,"column":15},"action":"remove","lines":["o"]},{"start":{"row":78,"column":13},"end":{"row":78,"column":14},"action":"remove","lines":["i"]},{"start":{"row":78,"column":12},"end":{"row":78,"column":13},"action":"remove","lines":["t"]},{"start":{"row":78,"column":11},"end":{"row":78,"column":12},"action":"remove","lines":["c"]},{"start":{"row":78,"column":10},"end":{"row":78,"column":11},"action":"remove","lines":["a"]},{"start":{"row":78,"column":9},"end":{"row":78,"column":10},"action":"remove","lines":["e"]},{"start":{"row":78,"column":8},"end":{"row":78,"column":9},"action":"remove","lines":["r"]}],[{"start":{"row":78,"column":8},"end":{"row":78,"column":9},"action":"insert","lines":["p"],"id":562},{"start":{"row":78,"column":9},"end":{"row":78,"column":10},"action":"insert","lines":["p"]}],[{"start":{"row":78,"column":9},"end":{"row":78,"column":10},"action":"remove","lines":["p"],"id":563}],[{"start":{"row":78,"column":9},"end":{"row":78,"column":10},"action":"insert","lines":["o"],"id":564},{"start":{"row":78,"column":10},"end":{"row":78,"column":11},"action":"insert","lines":["s"]},{"start":{"row":78,"column":11},"end":{"row":78,"column":12},"action":"insert","lines":["t"]},{"start":{"row":78,"column":12},"end":{"row":78,"column":13},"action":"insert","lines":["_"]}],[{"start":{"row":45,"column":15},"end":{"row":45,"column":16},"action":"remove","lines":["n"],"id":565},{"start":{"row":45,"column":14},"end":{"row":45,"column":15},"action":"remove","lines":["o"]},{"start":{"row":45,"column":13},"end":{"row":45,"column":14},"action":"remove","lines":["i"]},{"start":{"row":45,"column":12},"end":{"row":45,"column":13},"action":"remove","lines":["t"]},{"start":{"row":45,"column":11},"end":{"row":45,"column":12},"action":"remove","lines":["c"]},{"start":{"row":45,"column":10},"end":{"row":45,"column":11},"action":"remove","lines":["a"]},{"start":{"row":45,"column":9},"end":{"row":45,"column":10},"action":"remove","lines":["e"]},{"start":{"row":45,"column":8},"end":{"row":45,"column":9},"action":"remove","lines":["r"]}],[{"start":{"row":45,"column":8},"end":{"row":45,"column":9},"action":"insert","lines":["p"],"id":566},{"start":{"row":45,"column":9},"end":{"row":45,"column":10},"action":"insert","lines":["o"]},{"start":{"row":45,"column":10},"end":{"row":45,"column":11},"action":"insert","lines":["s"]},{"start":{"row":45,"column":11},"end":{"row":45,"column":12},"action":"insert","lines":["t"]},{"start":{"row":45,"column":12},"end":{"row":45,"column":13},"action":"insert","lines":["_"]}],[{"start":{"row":45,"column":12},"end":{"row":45,"column":13},"action":"remove","lines":["_"],"id":567}],[{"start":{"row":78,"column":12},"end":{"row":78,"column":13},"action":"remove","lines":["_"],"id":568}],[{"start":{"row":109,"column":15},"end":{"row":109,"column":16},"action":"remove","lines":["n"],"id":569},{"start":{"row":109,"column":14},"end":{"row":109,"column":15},"action":"remove","lines":["o"]},{"start":{"row":109,"column":13},"end":{"row":109,"column":14},"action":"remove","lines":["i"]},{"start":{"row":109,"column":12},"end":{"row":109,"column":13},"action":"remove","lines":["t"]},{"start":{"row":109,"column":11},"end":{"row":109,"column":12},"action":"remove","lines":["c"]},{"start":{"row":109,"column":10},"end":{"row":109,"column":11},"action":"remove","lines":["a"]},{"start":{"row":109,"column":9},"end":{"row":109,"column":10},"action":"remove","lines":["e"]}],[{"start":{"row":109,"column":8},"end":{"row":109,"column":9},"action":"remove","lines":["r"],"id":570}],[{"start":{"row":109,"column":8},"end":{"row":109,"column":9},"action":"insert","lines":["p"],"id":571},{"start":{"row":109,"column":9},"end":{"row":109,"column":10},"action":"insert","lines":["o"]},{"start":{"row":109,"column":10},"end":{"row":109,"column":11},"action":"insert","lines":["s"]},{"start":{"row":109,"column":11},"end":{"row":109,"column":12},"action":"insert","lines":["t"]}],[{"start":{"row":9,"column":64},"end":{"row":10,"column":0},"action":"remove","lines":["",""],"id":572}],[{"start":{"row":25,"column":50},"end":{"row":26,"column":0},"action":"insert","lines":["",""],"id":573},{"start":{"row":26,"column":0},"end":{"row":26,"column":8},"action":"insert","lines":["        "]}],[{"start":{"row":26,"column":4},"end":{"row":26,"column":8},"action":"remove","lines":["    "],"id":574},{"start":{"row":26,"column":0},"end":{"row":26,"column":4},"action":"remove","lines":["    "]}],[{"start":{"row":31,"column":8},"end":{"row":31,"column":12},"action":"remove","lines":["    "],"id":575},{"start":{"row":31,"column":4},"end":{"row":31,"column":8},"action":"remove","lines":["    "]},{"start":{"row":31,"column":0},"end":{"row":31,"column":4},"action":"remove","lines":["    "]},{"start":{"row":30,"column":43},"end":{"row":31,"column":0},"action":"remove","lines":["",""]}],[{"start":{"row":31,"column":12},"end":{"row":31,"column":13},"action":"insert","lines":[" "],"id":576},{"start":{"row":31,"column":13},"end":{"row":31,"column":14},"action":"insert","lines":[" "]},{"start":{"row":31,"column":14},"end":{"row":31,"column":15},"action":"insert","lines":[" "]},{"start":{"row":31,"column":15},"end":{"row":31,"column":16},"action":"insert","lines":[" "]},{"start":{"row":31,"column":16},"end":{"row":31,"column":17},"action":"insert","lines":[" "]},{"start":{"row":31,"column":17},"end":{"row":31,"column":18},"action":"insert","lines":[" "]},{"start":{"row":31,"column":18},"end":{"row":31,"column":19},"action":"insert","lines":[" "]},{"start":{"row":31,"column":19},"end":{"row":31,"column":20},"action":"insert","lines":[" "]},{"start":{"row":31,"column":20},"end":{"row":31,"column":21},"action":"insert","lines":[" "]},{"start":{"row":31,"column":21},"end":{"row":31,"column":22},"action":"insert","lines":[" "]},{"start":{"row":31,"column":22},"end":{"row":31,"column":23},"action":"insert","lines":[" "]},{"start":{"row":31,"column":23},"end":{"row":31,"column":24},"action":"insert","lines":[" "]},{"start":{"row":31,"column":24},"end":{"row":31,"column":25},"action":"insert","lines":[" "]},{"start":{"row":31,"column":25},"end":{"row":31,"column":26},"action":"insert","lines":[" "]},{"start":{"row":31,"column":26},"end":{"row":31,"column":27},"action":"insert","lines":[" "]},{"start":{"row":31,"column":27},"end":{"row":31,"column":28},"action":"insert","lines":[" "]},{"start":{"row":31,"column":28},"end":{"row":31,"column":29},"action":"insert","lines":[" "]}],[{"start":{"row":31,"column":29},"end":{"row":31,"column":30},"action":"insert","lines":[" "],"id":577},{"start":{"row":31,"column":30},"end":{"row":31,"column":31},"action":"insert","lines":[" "]},{"start":{"row":31,"column":31},"end":{"row":31,"column":32},"action":"insert","lines":[" "]},{"start":{"row":31,"column":32},"end":{"row":31,"column":33},"action":"insert","lines":[" "]},{"start":{"row":31,"column":33},"end":{"row":31,"column":34},"action":"insert","lines":[" "]},{"start":{"row":31,"column":34},"end":{"row":31,"column":35},"action":"insert","lines":[" "]},{"start":{"row":31,"column":35},"end":{"row":31,"column":36},"action":"insert","lines":[" "]},{"start":{"row":31,"column":36},"end":{"row":31,"column":37},"action":"insert","lines":[" "]},{"start":{"row":31,"column":37},"end":{"row":31,"column":38},"action":"insert","lines":[" "]},{"start":{"row":31,"column":38},"end":{"row":31,"column":39},"action":"insert","lines":[" "]},{"start":{"row":31,"column":39},"end":{"row":31,"column":40},"action":"insert","lines":[" "]},{"start":{"row":31,"column":40},"end":{"row":31,"column":41},"action":"insert","lines":[" "]},{"start":{"row":31,"column":41},"end":{"row":31,"column":42},"action":"insert","lines":[" "]},{"start":{"row":31,"column":42},"end":{"row":31,"column":43},"action":"insert","lines":[" "]},{"start":{"row":31,"column":43},"end":{"row":31,"column":44},"action":"insert","lines":[" "]}],[{"start":{"row":31,"column":40},"end":{"row":31,"column":44},"action":"remove","lines":["    "],"id":578}],[{"start":{"row":31,"column":40},"end":{"row":31,"column":41},"action":"insert","lines":[" "],"id":579},{"start":{"row":31,"column":41},"end":{"row":31,"column":42},"action":"insert","lines":[" "]},{"start":{"row":31,"column":42},"end":{"row":31,"column":43},"action":"insert","lines":[" "]}],[{"start":{"row":32,"column":12},"end":{"row":32,"column":13},"action":"insert","lines":[" "],"id":580},{"start":{"row":32,"column":13},"end":{"row":32,"column":14},"action":"insert","lines":[" "]},{"start":{"row":32,"column":14},"end":{"row":32,"column":15},"action":"insert","lines":[" "]},{"start":{"row":32,"column":15},"end":{"row":32,"column":16},"action":"insert","lines":[" "]},{"start":{"row":32,"column":16},"end":{"row":32,"column":17},"action":"insert","lines":[" "]},{"start":{"row":32,"column":17},"end":{"row":32,"column":18},"action":"insert","lines":[" "]},{"start":{"row":32,"column":18},"end":{"row":32,"column":19},"action":"insert","lines":[" "]},{"start":{"row":32,"column":19},"end":{"row":32,"column":20},"action":"insert","lines":[" "]},{"start":{"row":32,"column":20},"end":{"row":32,"column":21},"action":"insert","lines":[" "]},{"start":{"row":32,"column":21},"end":{"row":32,"column":22},"action":"insert","lines":[" "]},{"start":{"row":32,"column":22},"end":{"row":32,"column":23},"action":"insert","lines":[" "]},{"start":{"row":32,"column":23},"end":{"row":32,"column":24},"action":"insert","lines":[" "]},{"start":{"row":32,"column":24},"end":{"row":32,"column":25},"action":"insert","lines":[" "]},{"start":{"row":32,"column":25},"end":{"row":32,"column":26},"action":"insert","lines":[" "]},{"start":{"row":32,"column":26},"end":{"row":32,"column":27},"action":"insert","lines":[" "]},{"start":{"row":32,"column":27},"end":{"row":32,"column":28},"action":"insert","lines":[" "]},{"start":{"row":32,"column":28},"end":{"row":32,"column":29},"action":"insert","lines":[" "]}],[{"start":{"row":32,"column":29},"end":{"row":32,"column":30},"action":"insert","lines":[" "],"id":581},{"start":{"row":32,"column":30},"end":{"row":32,"column":31},"action":"insert","lines":[" "]},{"start":{"row":32,"column":31},"end":{"row":32,"column":32},"action":"insert","lines":[" "]},{"start":{"row":32,"column":32},"end":{"row":32,"column":33},"action":"insert","lines":[" "]},{"start":{"row":32,"column":33},"end":{"row":32,"column":34},"action":"insert","lines":[" "]},{"start":{"row":32,"column":34},"end":{"row":32,"column":35},"action":"insert","lines":[" "]},{"start":{"row":32,"column":35},"end":{"row":32,"column":36},"action":"insert","lines":[" "]},{"start":{"row":32,"column":36},"end":{"row":32,"column":37},"action":"insert","lines":[" "]},{"start":{"row":32,"column":37},"end":{"row":32,"column":38},"action":"insert","lines":[" "]},{"start":{"row":32,"column":38},"end":{"row":32,"column":39},"action":"insert","lines":[" "]},{"start":{"row":32,"column":39},"end":{"row":32,"column":40},"action":"insert","lines":[" "]},{"start":{"row":32,"column":40},"end":{"row":32,"column":41},"action":"insert","lines":[" "]},{"start":{"row":32,"column":41},"end":{"row":32,"column":42},"action":"insert","lines":[" "]},{"start":{"row":32,"column":42},"end":{"row":32,"column":43},"action":"insert","lines":[" "]}],[{"start":{"row":32,"column":43},"end":{"row":32,"column":44},"action":"insert","lines":[" "],"id":582}],[{"start":{"row":32,"column":40},"end":{"row":32,"column":44},"action":"remove","lines":["    "],"id":583}],[{"start":{"row":32,"column":40},"end":{"row":32,"column":41},"action":"insert","lines":[" "],"id":584},{"start":{"row":32,"column":41},"end":{"row":32,"column":42},"action":"insert","lines":[" "]},{"start":{"row":32,"column":42},"end":{"row":32,"column":43},"action":"insert","lines":[" "]}],[{"start":{"row":33,"column":4},"end":{"row":33,"column":8},"action":"remove","lines":["    "],"id":585},{"start":{"row":33,"column":0},"end":{"row":33,"column":4},"action":"remove","lines":["    "]},{"start":{"row":32,"column":62},"end":{"row":33,"column":0},"action":"remove","lines":["",""]}],[{"start":{"row":44,"column":8},"end":{"row":44,"column":12},"action":"remove","lines":["    "],"id":586},{"start":{"row":44,"column":4},"end":{"row":44,"column":8},"action":"remove","lines":["    "]},{"start":{"row":44,"column":0},"end":{"row":44,"column":4},"action":"remove","lines":["    "]},{"start":{"row":43,"column":62},"end":{"row":44,"column":0},"action":"remove","lines":["",""]}],[{"start":{"row":44,"column":4},"end":{"row":44,"column":8},"action":"remove","lines":["    "],"id":587},{"start":{"row":44,"column":0},"end":{"row":44,"column":4},"action":"remove","lines":["    "]},{"start":{"row":43,"column":77},"end":{"row":44,"column":0},"action":"remove","lines":["",""]}],[{"start":{"row":45,"column":28},"end":{"row":45,"column":29},"action":"remove","lines":[" "],"id":588}],[{"start":{"row":45,"column":28},"end":{"row":46,"column":0},"action":"insert","lines":["",""],"id":589},{"start":{"row":46,"column":0},"end":{"row":46,"column":12},"action":"insert","lines":["            "]}],[{"start":{"row":46,"column":28},"end":{"row":46,"column":29},"action":"remove","lines":[" "],"id":590}],[{"start":{"row":46,"column":28},"end":{"row":47,"column":0},"action":"insert","lines":["",""],"id":591},{"start":{"row":47,"column":0},"end":{"row":47,"column":12},"action":"insert","lines":["            "]}],[{"start":{"row":78,"column":68},"end":{"row":79,"column":0},"action":"insert","lines":["",""],"id":592},{"start":{"row":79,"column":0},"end":{"row":79,"column":12},"action":"insert","lines":["            "]}],[{"start":{"row":80,"column":58},"end":{"row":80,"column":59},"action":"remove","lines":[" "],"id":593},{"start":{"row":80,"column":57},"end":{"row":80,"column":58},"action":"remove","lines":[" "]},{"start":{"row":80,"column":56},"end":{"row":80,"column":57},"action":"remove","lines":[" "]},{"start":{"row":80,"column":52},"end":{"row":80,"column":56},"action":"remove","lines":["    "]},{"start":{"row":80,"column":48},"end":{"row":80,"column":52},"action":"remove","lines":["    "]},{"start":{"row":80,"column":44},"end":{"row":80,"column":48},"action":"remove","lines":["    "]},{"start":{"row":80,"column":40},"end":{"row":80,"column":44},"action":"remove","lines":["    "]},{"start":{"row":80,"column":36},"end":{"row":80,"column":40},"action":"remove","lines":["    "]},{"start":{"row":80,"column":32},"end":{"row":80,"column":36},"action":"remove","lines":["    "]},{"start":{"row":80,"column":28},"end":{"row":80,"column":32},"action":"remove","lines":["    "]},{"start":{"row":80,"column":24},"end":{"row":80,"column":28},"action":"remove","lines":["    "]},{"start":{"row":80,"column":20},"end":{"row":80,"column":24},"action":"remove","lines":["    "]},{"start":{"row":80,"column":16},"end":{"row":80,"column":20},"action":"remove","lines":["    "]},{"start":{"row":80,"column":12},"end":{"row":80,"column":16},"action":"remove","lines":["    "]}],[{"start":{"row":80,"column":27},"end":{"row":81,"column":0},"action":"insert","lines":["",""],"id":594},{"start":{"row":81,"column":0},"end":{"row":81,"column":12},"action":"insert","lines":["            "]}],[{"start":{"row":81,"column":8},"end":{"row":81,"column":12},"action":"remove","lines":["    "],"id":595}],[{"start":{"row":81,"column":4},"end":{"row":81,"column":8},"action":"remove","lines":["    "],"id":596},{"start":{"row":81,"column":0},"end":{"row":81,"column":4},"action":"remove","lines":["    "]},{"start":{"row":80,"column":27},"end":{"row":81,"column":0},"action":"remove","lines":["",""]}],[{"start":{"row":122,"column":50},"end":{"row":123,"column":0},"action":"insert","lines":["",""],"id":597},{"start":{"row":123,"column":0},"end":{"row":123,"column":8},"action":"insert","lines":["        "]}],[{"start":{"row":123,"column":4},"end":{"row":123,"column":8},"action":"remove","lines":["    "],"id":598},{"start":{"row":123,"column":0},"end":{"row":123,"column":4},"action":"remove","lines":["    "]}],[{"start":{"row":106,"column":0},"end":{"row":106,"column":4},"action":"remove","lines":["    "],"id":599}],[{"start":{"row":41,"column":0},"end":{"row":41,"column":4},"action":"remove","lines":["    "],"id":600}],[{"start":{"row":49,"column":0},"end":{"row":50,"column":0},"action":"remove","lines":["",""],"id":601}],[{"start":{"row":67,"column":8},"end":{"row":67,"column":12},"action":"remove","lines":["    "],"id":602},{"start":{"row":67,"column":4},"end":{"row":67,"column":8},"action":"remove","lines":["    "]},{"start":{"row":67,"column":0},"end":{"row":67,"column":4},"action":"remove","lines":["    "]}],[{"start":{"row":140,"column":0},"end":{"row":140,"column":4},"action":"remove","lines":["    "],"id":603}],[{"start":{"row":0,"column":0},"end":{"row":140,"column":0},"action":"remove","lines":["from unittest.mock import create_autospec","","import pytest","","from django_swagger_utils.drf_server.exceptions import NotFound","","from fb_post_v2.interactors.storages import PostStorageInterface","from fb_post_v2.interactors.storages import ReactionStorageInterface","","from fb_post_v2.interactors.presenters import PresenterInterface","from fb_post_v2.interactors.react_to_post_interactor import \\","    ReactToPostInteractor","","from fb_post_v2.constants import ReactionTypeEnum","","from fb_post_v2.exceptions import ReactionDoesNotExists","","","class TestReactToPostInteractor:","","    def test_react_to_post_interactor_with_first_time_react_to_post(self):","","        # Arrange","        user_id = 1","        post_id = 1","        reaction_type = ReactionTypeEnum.WOW.value","","        post_storage = create_autospec(PostStorageInterface)","        reaction_storage = create_autospec(ReactionStorageInterface)","        presenter = create_autospec(PresenterInterface)","        interactor = ReactToPostInteractor(post_storage=post_storage,","                                           reaction_storage=reaction_storage,","                                           presenter=presenter)","","        reaction_storage.validate_post_reaction_if_exists_get_reaction_type. \\","            side_effect = ReactionDoesNotExists","","        # Act","        interactor.react_to_post(user_id=user_id,","                                 post_id=post_id,","                                 reaction_type=reaction_type)","","        # Assert","        post_storage.is_valid_post_id.assert_called_once_with(post_id=post_id)","        reaction_storage.create_reaction_to_post.assert_called_once_with(","            user_id=user_id,","            post_id=post_id,","            reaction_type=reaction_type","        )","","    def test_react_to_post_interactor_with_undo_post_reaction(self):","","        # Arrange","        user_id = 1","        post_id = 1","        reaction_type = ReactionTypeEnum.WOW.value","        post_storage = create_autospec(PostStorageInterface)","        reaction_storage = create_autospec(ReactionStorageInterface)","        presenter = create_autospec(PresenterInterface)","        interactor = ReactToPostInteractor(","            post_storage=post_storage,","            reaction_storage=reaction_storage,","            presenter=presenter","        )","","        reaction_storage.validate_post_reaction_if_exists_get_reaction_type. \\","            return_value = \"WOW\"","","","        # Act","        interactor.react_to_post(user_id=user_id,","                                 post_id=post_id,","                                 reaction_type=reaction_type)","","        # Assert","        post_storage.is_valid_post_id.assert_called_once_with(","            post_id=post_id)","        reaction_storage.undo_post_reaction.assert_called_once_with(","            user_id=user_id,","            post_id=post_id)","","","    def test_react_to_post_interactor_with_update_post_reaction(self):","","        # Arrange","        user_id = 1","        post_id = 1","        reaction_type = ReactionTypeEnum.WOW.value","        different_reaction_type = ReactionTypeEnum.LOVE.value","        post_storage = create_autospec(PostStorageInterface)","        reaction_storage = create_autospec(ReactionStorageInterface)","        presenter = create_autospec(PresenterInterface)","        interactor = ReactToPostInteractor(","            post_storage=post_storage,","            reaction_storage=reaction_storage,","            presenter=presenter","        )","","        reaction_storage.validate_post_reaction_if_exists_get_reaction_type. \\","            return_value = different_reaction_type","","        # Act","        interactor.react_to_post(user_id=user_id,","                                 post_id=post_id,","                                 reaction_type=reaction_type)","","        # Assert","        post_storage.is_valid_post_id.assert_called_once_with(","            post_id=post_id)","        reaction_storage.update_post_reaction.assert_called_once_with(","            user_id=user_id, post_id=post_id, reaction_type=reaction_type","        )","","","    def test_react_to_post_interactor_with_invalid_post_id_raise_exception(","            self","    ):","","        # Arrange","        user_id = 1","        post_id = -1","        reaction_type = ReactionTypeEnum.WOW.value","","        post_storage = create_autospec(PostStorageInterface)","        reaction_storage = create_autospec(ReactionStorageInterface)","        presenter = create_autospec(PresenterInterface)","        interactor = ReactToPostInteractor(","            post_storage=post_storage,","            reaction_storage=reaction_storage,","            presenter=presenter","        )","","        post_storage.is_valid_post_id.return_value = False ","        presenter.raise_invalid_post_id_exception.side_effect = NotFound","","        # Act","        with pytest.raises(NotFound):","            interactor.react_to_post(user_id=user_id,","                                     post_id=post_id,","                                     reaction_type=reaction_type)",""],"id":604},{"start":{"row":0,"column":0},"end":{"row":140,"column":0},"action":"insert","lines":["from unittest.mock import create_autospec","","import pytest","","from django_swagger_utils.drf_server.exceptions import NotFound","","from fb_post_v2.interactors.storages import PostStorageInterface","from fb_post_v2.interactors.storages import ReactionStorageInterface","","from fb_post_v2.interactors.presenters import PresenterInterface","from fb_post_v2.interactors.react_to_post_interactor import \\","    ReactToPostInteractor","","from fb_post_v2.constants import ReactionTypeEnum","","from fb_post_v2.exceptions import ReactionDoesNotExists","","","class TestReactToPostInteractor:","","    def test_react_to_post_interactor_with_first_time_react_to_post(self):","","        # Arrange","        user_id = 1","        post_id = 1","        reaction_type = ReactionTypeEnum.WOW.value","","        post_storage = create_autospec(PostStorageInterface)","        reaction_storage = create_autospec(ReactionStorageInterface)","        presenter = create_autospec(PresenterInterface)","        interactor = ReactToPostInteractor(post_storage=post_storage,","                                           reaction_storage=reaction_storage,","                                           presenter=presenter)","","        reaction_storage.validate_post_reaction_if_exists_get_reaction_type. \\","            side_effect = ReactionDoesNotExists","","        # Act","        interactor.react_to_post(user_id=user_id,","                                 post_id=post_id,","                                 reaction_type=reaction_type)","","        # Assert","        post_storage.is_valid_post_id.assert_called_once_with(post_id=post_id)","        reaction_storage.create_reaction_to_post.assert_called_once_with(","            user_id=user_id,","            post_id=post_id,","            reaction_type=reaction_type","        )","","    def test_react_to_post_interactor_with_undo_post_reaction(self):","","        # Arrange","        user_id = 1","        post_id = 1","        reaction_type = ReactionTypeEnum.WOW.value","        post_storage = create_autospec(PostStorageInterface)","        reaction_storage = create_autospec(ReactionStorageInterface)","        presenter = create_autospec(PresenterInterface)","        interactor = ReactToPostInteractor(","            post_storage=post_storage,","            reaction_storage=reaction_storage,","            presenter=presenter","        )","","        reaction_storage.validate_post_reaction_if_exists_get_reaction_type. \\","            return_value = \"WOW\"","","","        # Act","        interactor.react_to_post(user_id=user_id,","                                 post_id=post_id,","                                 reaction_type=reaction_type)","","        # Assert","        post_storage.is_valid_post_id.assert_called_once_with(","            post_id=post_id)","        reaction_storage.undo_post_reaction.assert_called_once_with(","            user_id=user_id,","            post_id=post_id)","","","    def test_react_to_post_interactor_with_update_post_reaction(self):","","        # Arrange","        user_id = 1","        post_id = 1","        reaction_type = ReactionTypeEnum.WOW.value","        different_reaction_type = ReactionTypeEnum.LOVE.value","        post_storage = create_autospec(PostStorageInterface)","        reaction_storage = create_autospec(ReactionStorageInterface)","        presenter = create_autospec(PresenterInterface)","        interactor = ReactToPostInteractor(","            post_storage=post_storage,","            reaction_storage=reaction_storage,","            presenter=presenter","        )","","        reaction_storage.validate_post_reaction_if_exists_get_reaction_type. \\","            return_value = different_reaction_type","","        # Act","        interactor.react_to_post(user_id=user_id,","                                 post_id=post_id,","                                 reaction_type=reaction_type)","","        # Assert","        post_storage.is_valid_post_id.assert_called_once_with(","            post_id=post_id)","        reaction_storage.update_post_reaction.assert_called_once_with(","            user_id=user_id, post_id=post_id, reaction_type=reaction_type","        )","","","    def test_react_to_post_interactor_with_invalid_post_id_raise_exception(","            self","    ):","","        # Arrange","        user_id = 1","        post_id = -1","        reaction_type = ReactionTypeEnum.WOW.value","","        post_storage = create_autospec(PostStorageInterface)","        reaction_storage = create_autospec(ReactionStorageInterface)","        presenter = create_autospec(PresenterInterface)","        interactor = ReactToPostInteractor(","            post_storage=post_storage,","            reaction_storage=reaction_storage,","            presenter=presenter","        )","","        post_storage.is_valid_post_id.return_value = False ","        presenter.raise_invalid_post_id_exception.side_effect = NotFound","","        # Act","        with pytest.raises(NotFound):","            interactor.react_to_post(user_id=user_id,","                                     post_id=post_id,","                                     reaction_type=reaction_type)",""]}],[{"start":{"row":67,"column":0},"end":{"row":68,"column":0},"action":"remove","lines":["",""],"id":606}],[{"start":{"row":78,"column":28},"end":{"row":79,"column":0},"action":"remove","lines":["",""],"id":607}],[{"start":{"row":79,"column":0},"end":{"row":80,"column":0},"action":"insert","lines":["",""],"id":608}],[{"start":{"row":131,"column":58},"end":{"row":131,"column":59},"action":"remove","lines":[" "],"id":609}],[{"start":{"row":78,"column":28},"end":{"row":79,"column":0},"action":"remove","lines":["",""],"id":610}],[{"start":{"row":110,"column":0},"end":{"row":111,"column":0},"action":"remove","lines":["",""],"id":611}],[{"start":{"row":0,"column":0},"end":{"row":137,"column":0},"action":"remove","lines":["from unittest.mock import create_autospec","","import pytest","","from django_swagger_utils.drf_server.exceptions import NotFound","","from fb_post_v2.interactors.storages import PostStorageInterface","from fb_post_v2.interactors.storages import ReactionStorageInterface","","from fb_post_v2.interactors.presenters import PresenterInterface","from fb_post_v2.interactors.react_to_post_interactor import \\","    ReactToPostInteractor","","from fb_post_v2.constants import ReactionTypeEnum","","from fb_post_v2.exceptions import ReactionDoesNotExists","","","class TestReactToPostInteractor:","","    def test_react_to_post_interactor_with_first_time_react_to_post(self):","","        # Arrange","        user_id = 1","        post_id = 1","        reaction_type = ReactionTypeEnum.WOW.value","","        post_storage = create_autospec(PostStorageInterface)","        reaction_storage = create_autospec(ReactionStorageInterface)","        presenter = create_autospec(PresenterInterface)","        interactor = ReactToPostInteractor(post_storage=post_storage,","                                           reaction_storage=reaction_storage,","                                           presenter=presenter)","","        reaction_storage.validate_post_reaction_if_exists_get_reaction_type. \\","            side_effect = ReactionDoesNotExists","","        # Act","        interactor.react_to_post(user_id=user_id,","                                 post_id=post_id,","                                 reaction_type=reaction_type)","","        # Assert","        post_storage.is_valid_post_id.assert_called_once_with(post_id=post_id)","        reaction_storage.create_reaction_to_post.assert_called_once_with(","            user_id=user_id,","            post_id=post_id,","            reaction_type=reaction_type","        )","","    def test_react_to_post_interactor_with_undo_post_reaction(self):","","        # Arrange","        user_id = 1","        post_id = 1","        reaction_type = ReactionTypeEnum.WOW.value","        post_storage = create_autospec(PostStorageInterface)","        reaction_storage = create_autospec(ReactionStorageInterface)","        presenter = create_autospec(PresenterInterface)","        interactor = ReactToPostInteractor(","            post_storage=post_storage,","            reaction_storage=reaction_storage,","            presenter=presenter","        )","","        reaction_storage.validate_post_reaction_if_exists_get_reaction_type. \\","            return_value = \"WOW\"","","        # Act","        interactor.react_to_post(user_id=user_id,","                                 post_id=post_id,","                                 reaction_type=reaction_type)","","        # Assert","        post_storage.is_valid_post_id.assert_called_once_with(","            post_id=post_id)","        reaction_storage.undo_post_reaction.assert_called_once_with(","            user_id=user_id,","            post_id=post_id)","","    def test_react_to_post_interactor_with_update_post_reaction(self):","","        # Arrange","        user_id = 1","        post_id = 1","        reaction_type = ReactionTypeEnum.WOW.value","        different_reaction_type = ReactionTypeEnum.LOVE.value","        post_storage = create_autospec(PostStorageInterface)","        reaction_storage = create_autospec(ReactionStorageInterface)","        presenter = create_autospec(PresenterInterface)","        interactor = ReactToPostInteractor(","            post_storage=post_storage,","            reaction_storage=reaction_storage,","            presenter=presenter","        )","","        reaction_storage.validate_post_reaction_if_exists_get_reaction_type. \\","            return_value = different_reaction_type","","        # Act","        interactor.react_to_post(user_id=user_id,","                                 post_id=post_id,","                                 reaction_type=reaction_type)","","        # Assert","        post_storage.is_valid_post_id.assert_called_once_with(","            post_id=post_id)","        reaction_storage.update_post_reaction.assert_called_once_with(","            user_id=user_id, post_id=post_id, reaction_type=reaction_type","        )","","    def test_react_to_post_interactor_with_invalid_post_id_raise_exception(","            self","    ):","","        # Arrange","        user_id = 1","        post_id = -1","        reaction_type = ReactionTypeEnum.WOW.value","","        post_storage = create_autospec(PostStorageInterface)","        reaction_storage = create_autospec(ReactionStorageInterface)","        presenter = create_autospec(PresenterInterface)","        interactor = ReactToPostInteractor(","            post_storage=post_storage,","            reaction_storage=reaction_storage,","            presenter=presenter","        )","","        post_storage.is_valid_post_id.return_value = False","        presenter.raise_invalid_post_id_exception.side_effect = NotFound","","        # Act","        with pytest.raises(NotFound):","            interactor.react_to_post(user_id=user_id,","                                     post_id=post_id,","                                     reaction_type=reaction_type)",""],"id":612},{"start":{"row":0,"column":0},"end":{"row":137,"column":0},"action":"insert","lines":["from unittest.mock import create_autospec","","import pytest","","from django_swagger_utils.drf_server.exceptions import NotFound","","from fb_post_v2.interactors.storages import PostStorageInterface","from fb_post_v2.interactors.storages import ReactionStorageInterface","","from fb_post_v2.interactors.presenters import PresenterInterface","from fb_post_v2.interactors.react_to_post_interactor import \\","    ReactToPostInteractor","","from fb_post_v2.constants import ReactionTypeEnum","","from fb_post_v2.exceptions import ReactionDoesNotExists","","","class TestReactToPostInteractor:","","    def test_react_to_post_interactor_with_first_time_react_to_post(self):","","        # Arrange","        user_id = 1","        post_id = 1","        reaction_type = ReactionTypeEnum.WOW.value","","        post_storage = create_autospec(PostStorageInterface)","        reaction_storage = create_autospec(ReactionStorageInterface)","        presenter = create_autospec(PresenterInterface)","        interactor = ReactToPostInteractor(post_storage=post_storage,","                                           reaction_storage=reaction_storage,","                                           presenter=presenter)","","        reaction_storage.validate_post_reaction_if_exists_get_reaction_type. \\","            side_effect = ReactionDoesNotExists","","        # Act","        interactor.react_to_post(user_id=user_id,","                                 post_id=post_id,","                                 reaction_type=reaction_type)","","        # Assert","        post_storage.is_valid_post_id.assert_called_once_with(post_id=post_id)","        reaction_storage.create_reaction_to_post.assert_called_once_with(","            user_id=user_id,","            post_id=post_id,","            reaction_type=reaction_type","        )","","    def test_react_to_post_interactor_with_undo_post_reaction(self):","","        # Arrange","        user_id = 1","        post_id = 1","        reaction_type = ReactionTypeEnum.WOW.value","        post_storage = create_autospec(PostStorageInterface)","        reaction_storage = create_autospec(ReactionStorageInterface)","        presenter = create_autospec(PresenterInterface)","        interactor = ReactToPostInteractor(","            post_storage=post_storage,","            reaction_storage=reaction_storage,","            presenter=presenter","        )","","        reaction_storage.validate_post_reaction_if_exists_get_reaction_type. \\","            return_value = \"WOW\"","","        # Act","        interactor.react_to_post(user_id=user_id,","                                 post_id=post_id,","                                 reaction_type=reaction_type)","","        # Assert","        post_storage.is_valid_post_id.assert_called_once_with(","            post_id=post_id)","        reaction_storage.undo_post_reaction.assert_called_once_with(","            user_id=user_id,","            post_id=post_id)","","    def test_react_to_post_interactor_with_update_post_reaction(self):","","        # Arrange","        user_id = 1","        post_id = 1","        reaction_type = ReactionTypeEnum.WOW.value","        different_reaction_type = ReactionTypeEnum.LOVE.value","        post_storage = create_autospec(PostStorageInterface)","        reaction_storage = create_autospec(ReactionStorageInterface)","        presenter = create_autospec(PresenterInterface)","        interactor = ReactToPostInteractor(","            post_storage=post_storage,","            reaction_storage=reaction_storage,","            presenter=presenter","        )","","        reaction_storage.validate_post_reaction_if_exists_get_reaction_type. \\","            return_value = different_reaction_type","","        # Act","        interactor.react_to_post(user_id=user_id,","                                 post_id=post_id,","                                 reaction_type=reaction_type)","","        # Assert","        post_storage.is_valid_post_id.assert_called_once_with(","            post_id=post_id)","        reaction_storage.update_post_reaction.assert_called_once_with(","            user_id=user_id, post_id=post_id, reaction_type=reaction_type","        )","","    def test_react_to_post_interactor_with_invalid_post_id_raise_exception(","            self","    ):","","        # Arrange","        user_id = 1","        post_id = -1","        reaction_type = ReactionTypeEnum.WOW.value","","        post_storage = create_autospec(PostStorageInterface)","        reaction_storage = create_autospec(ReactionStorageInterface)","        presenter = create_autospec(PresenterInterface)","        interactor = ReactToPostInteractor(","            post_storage=post_storage,","            reaction_storage=reaction_storage,","            presenter=presenter","        )","","        post_storage.is_valid_post_id.return_value = False","        presenter.raise_invalid_post_id_exception.side_effect = NotFound","","        # Act","        with pytest.raises(NotFound):","            interactor.react_to_post(user_id=user_id,","                                     post_id=post_id,","                                     reaction_type=reaction_type)",""]}],[{"start":{"row":0,"column":0},"end":{"row":137,"column":0},"action":"remove","lines":["from unittest.mock import create_autospec","","import pytest","","from django_swagger_utils.drf_server.exceptions import NotFound","","from fb_post_v2.interactors.storages import PostStorageInterface","from fb_post_v2.interactors.storages import ReactionStorageInterface","","from fb_post_v2.interactors.presenters import PresenterInterface","from fb_post_v2.interactors.react_to_post_interactor import \\","    ReactToPostInteractor","","from fb_post_v2.constants import ReactionTypeEnum","","from fb_post_v2.exceptions import ReactionDoesNotExists","","","class TestReactToPostInteractor:","","    def test_react_to_post_interactor_with_first_time_react_to_post(self):","","        # Arrange","        user_id = 1","        post_id = 1","        reaction_type = ReactionTypeEnum.WOW.value","","        post_storage = create_autospec(PostStorageInterface)","        reaction_storage = create_autospec(ReactionStorageInterface)","        presenter = create_autospec(PresenterInterface)","        interactor = ReactToPostInteractor(post_storage=post_storage,","                                           reaction_storage=reaction_storage,","                                           presenter=presenter)","","        reaction_storage.validate_post_reaction_if_exists_get_reaction_type. \\","            side_effect = ReactionDoesNotExists","","        # Act","        interactor.react_to_post(user_id=user_id,","                                 post_id=post_id,","                                 reaction_type=reaction_type)","","        # Assert","        post_storage.is_valid_post_id.assert_called_once_with(post_id=post_id)","        reaction_storage.create_reaction_to_post.assert_called_once_with(","            user_id=user_id,","            post_id=post_id,","            reaction_type=reaction_type","        )","","    def test_react_to_post_interactor_with_undo_post_reaction(self):","","        # Arrange","        user_id = 1","        post_id = 1","        reaction_type = ReactionTypeEnum.WOW.value","        post_storage = create_autospec(PostStorageInterface)","        reaction_storage = create_autospec(ReactionStorageInterface)","        presenter = create_autospec(PresenterInterface)","        interactor = ReactToPostInteractor(","            post_storage=post_storage,","            reaction_storage=reaction_storage,","            presenter=presenter","        )","","        reaction_storage.validate_post_reaction_if_exists_get_reaction_type. \\","            return_value = \"WOW\"","","        # Act","        interactor.react_to_post(user_id=user_id,","                                 post_id=post_id,","                                 reaction_type=reaction_type)","","        # Assert","        post_storage.is_valid_post_id.assert_called_once_with(","            post_id=post_id)","        reaction_storage.undo_post_reaction.assert_called_once_with(","            user_id=user_id,","            post_id=post_id)","","    def test_react_to_post_interactor_with_update_post_reaction(self):","","        # Arrange","        user_id = 1","        post_id = 1","        reaction_type = ReactionTypeEnum.WOW.value","        different_reaction_type = ReactionTypeEnum.LOVE.value","        post_storage = create_autospec(PostStorageInterface)","        reaction_storage = create_autospec(ReactionStorageInterface)","        presenter = create_autospec(PresenterInterface)","        interactor = ReactToPostInteractor(","            post_storage=post_storage,","            reaction_storage=reaction_storage,","            presenter=presenter","        )","","        reaction_storage.validate_post_reaction_if_exists_get_reaction_type. \\","            return_value = different_reaction_type","","        # Act","        interactor.react_to_post(user_id=user_id,","                                 post_id=post_id,","                                 reaction_type=reaction_type)","","        # Assert","        post_storage.is_valid_post_id.assert_called_once_with(","            post_id=post_id)","        reaction_storage.update_post_reaction.assert_called_once_with(","            user_id=user_id, post_id=post_id, reaction_type=reaction_type","        )","","    def test_react_to_post_interactor_with_invalid_post_id_raise_exception(","            self","    ):","","        # Arrange","        user_id = 1","        post_id = -1","        reaction_type = ReactionTypeEnum.WOW.value","","        post_storage = create_autospec(PostStorageInterface)","        reaction_storage = create_autospec(ReactionStorageInterface)","        presenter = create_autospec(PresenterInterface)","        interactor = ReactToPostInteractor(","            post_storage=post_storage,","            reaction_storage=reaction_storage,","            presenter=presenter","        )","","        post_storage.is_valid_post_id.return_value = False","        presenter.raise_invalid_post_id_exception.side_effect = NotFound","","        # Act","        with pytest.raises(NotFound):","            interactor.react_to_post(user_id=user_id,","                                     post_id=post_id,","                                     reaction_type=reaction_type)",""],"id":613},{"start":{"row":0,"column":0},"end":{"row":137,"column":0},"action":"insert","lines":["from unittest.mock import create_autospec","","import pytest","","from django_swagger_utils.drf_server.exceptions import NotFound","","from fb_post_v2.interactors.storages import PostStorageInterface","from fb_post_v2.interactors.storages import ReactionStorageInterface","","from fb_post_v2.interactors.presenters import PresenterInterface","from fb_post_v2.interactors.react_to_post_interactor import \\","    ReactToPostInteractor","","from fb_post_v2.constants import ReactionTypeEnum","","from fb_post_v2.exceptions import ReactionDoesNotExists","","","class TestReactToPostInteractor:","","    def test_react_to_post_interactor_with_first_time_react_to_post(self):","","        # Arrange","        user_id = 1","        post_id = 1","        reaction_type = ReactionTypeEnum.WOW.value","","        post_storage = create_autospec(PostStorageInterface)","        reaction_storage = create_autospec(ReactionStorageInterface)","        presenter = create_autospec(PresenterInterface)","        interactor = ReactToPostInteractor(post_storage=post_storage,","                                           reaction_storage=reaction_storage,","                                           presenter=presenter)","","        reaction_storage.validate_post_reaction_if_exists_get_reaction_type. \\","            side_effect = ReactionDoesNotExists","","        # Act","        interactor.react_to_post(user_id=user_id,","                                 post_id=post_id,","                                 reaction_type=reaction_type)","","        # Assert","        post_storage.is_valid_post_id.assert_called_once_with(post_id=post_id)","        reaction_storage.create_reaction_to_post.assert_called_once_with(","            user_id=user_id,","            post_id=post_id,","            reaction_type=reaction_type","        )","","    def test_react_to_post_interactor_with_undo_post_reaction(self):","","        # Arrange","        user_id = 1","        post_id = 1","        reaction_type = ReactionTypeEnum.WOW.value","        post_storage = create_autospec(PostStorageInterface)","        reaction_storage = create_autospec(ReactionStorageInterface)","        presenter = create_autospec(PresenterInterface)","        interactor = ReactToPostInteractor(","            post_storage=post_storage,","            reaction_storage=reaction_storage,","            presenter=presenter","        )","","        reaction_storage.validate_post_reaction_if_exists_get_reaction_type. \\","            return_value = \"WOW\"","","        # Act","        interactor.react_to_post(user_id=user_id,","                                 post_id=post_id,","                                 reaction_type=reaction_type)","","        # Assert","        post_storage.is_valid_post_id.assert_called_once_with(","            post_id=post_id)","        reaction_storage.undo_post_reaction.assert_called_once_with(","            user_id=user_id,","            post_id=post_id)","","    def test_react_to_post_interactor_with_update_post_reaction(self):","","        # Arrange","        user_id = 1","        post_id = 1","        reaction_type = ReactionTypeEnum.WOW.value","        different_reaction_type = ReactionTypeEnum.LOVE.value","        post_storage = create_autospec(PostStorageInterface)","        reaction_storage = create_autospec(ReactionStorageInterface)","        presenter = create_autospec(PresenterInterface)","        interactor = ReactToPostInteractor(","            post_storage=post_storage,","            reaction_storage=reaction_storage,","            presenter=presenter","        )","","        reaction_storage.validate_post_reaction_if_exists_get_reaction_type. \\","            return_value = different_reaction_type","","        # Act","        interactor.react_to_post(user_id=user_id,","                                 post_id=post_id,","                                 reaction_type=reaction_type)","","        # Assert","        post_storage.is_valid_post_id.assert_called_once_with(","            post_id=post_id)","        reaction_storage.update_post_reaction.assert_called_once_with(","            user_id=user_id, post_id=post_id, reaction_type=reaction_type","        )","","    def test_react_to_post_interactor_with_invalid_post_id_raise_exception(","            self","    ):","","        # Arrange","        user_id = 1","        post_id = -1","        reaction_type = ReactionTypeEnum.WOW.value","","        post_storage = create_autospec(PostStorageInterface)","        reaction_storage = create_autospec(ReactionStorageInterface)","        presenter = create_autospec(PresenterInterface)","        interactor = ReactToPostInteractor(","            post_storage=post_storage,","            reaction_storage=reaction_storage,","            presenter=presenter","        )","","        post_storage.is_valid_post_id.return_value = False","        presenter.raise_invalid_post_id_exception.side_effect = NotFound","","        # Act","        with pytest.raises(NotFound):","            interactor.react_to_post(user_id=user_id,","                                     post_id=post_id,","                                     reaction_type=reaction_type)",""]}],[{"start":{"row":0,"column":0},"end":{"row":137,"column":0},"action":"remove","lines":["from unittest.mock import create_autospec","","import pytest","","from django_swagger_utils.drf_server.exceptions import NotFound","","from fb_post_v2.interactors.storages import PostStorageInterface","from fb_post_v2.interactors.storages import ReactionStorageInterface","","from fb_post_v2.interactors.presenters import PresenterInterface","from fb_post_v2.interactors.react_to_post_interactor import \\","    ReactToPostInteractor","","from fb_post_v2.constants import ReactionTypeEnum","","from fb_post_v2.exceptions import ReactionDoesNotExists","","","class TestReactToPostInteractor:","","    def test_react_to_post_interactor_with_first_time_react_to_post(self):","","        # Arrange","        user_id = 1","        post_id = 1","        reaction_type = ReactionTypeEnum.WOW.value","","        post_storage = create_autospec(PostStorageInterface)","        reaction_storage = create_autospec(ReactionStorageInterface)","        presenter = create_autospec(PresenterInterface)","        interactor = ReactToPostInteractor(post_storage=post_storage,","                                           reaction_storage=reaction_storage,","                                           presenter=presenter)","","        reaction_storage.validate_post_reaction_if_exists_get_reaction_type. \\","            side_effect = ReactionDoesNotExists","","        # Act","        interactor.react_to_post(user_id=user_id,","                                 post_id=post_id,","                                 reaction_type=reaction_type)","","        # Assert","        post_storage.is_valid_post_id.assert_called_once_with(post_id=post_id)","        reaction_storage.create_reaction_to_post.assert_called_once_with(","            user_id=user_id,","            post_id=post_id,","            reaction_type=reaction_type","        )","","    def test_react_to_post_interactor_with_undo_post_reaction(self):","","        # Arrange","        user_id = 1","        post_id = 1","        reaction_type = ReactionTypeEnum.WOW.value","        post_storage = create_autospec(PostStorageInterface)","        reaction_storage = create_autospec(ReactionStorageInterface)","        presenter = create_autospec(PresenterInterface)","        interactor = ReactToPostInteractor(","            post_storage=post_storage,","            reaction_storage=reaction_storage,","            presenter=presenter","        )","","        reaction_storage.validate_post_reaction_if_exists_get_reaction_type. \\","            return_value = \"WOW\"","","        # Act","        interactor.react_to_post(user_id=user_id,","                                 post_id=post_id,","                                 reaction_type=reaction_type)","","        # Assert","        post_storage.is_valid_post_id.assert_called_once_with(","            post_id=post_id)","        reaction_storage.undo_post_reaction.assert_called_once_with(","            user_id=user_id,","            post_id=post_id)","","    def test_react_to_post_interactor_with_update_post_reaction(self):","","        # Arrange","        user_id = 1","        post_id = 1","        reaction_type = ReactionTypeEnum.WOW.value","        different_reaction_type = ReactionTypeEnum.LOVE.value","        post_storage = create_autospec(PostStorageInterface)","        reaction_storage = create_autospec(ReactionStorageInterface)","        presenter = create_autospec(PresenterInterface)","        interactor = ReactToPostInteractor(","            post_storage=post_storage,","            reaction_storage=reaction_storage,","            presenter=presenter","        )","","        reaction_storage.validate_post_reaction_if_exists_get_reaction_type. \\","            return_value = different_reaction_type","","        # Act","        interactor.react_to_post(user_id=user_id,","                                 post_id=post_id,","                                 reaction_type=reaction_type)","","        # Assert","        post_storage.is_valid_post_id.assert_called_once_with(","            post_id=post_id)","        reaction_storage.update_post_reaction.assert_called_once_with(","            user_id=user_id, post_id=post_id, reaction_type=reaction_type","        )","","    def test_react_to_post_interactor_with_invalid_post_id_raise_exception(","            self","    ):","","        # Arrange","        user_id = 1","        post_id = -1","        reaction_type = ReactionTypeEnum.WOW.value","","        post_storage = create_autospec(PostStorageInterface)","        reaction_storage = create_autospec(ReactionStorageInterface)","        presenter = create_autospec(PresenterInterface)","        interactor = ReactToPostInteractor(","            post_storage=post_storage,","            reaction_storage=reaction_storage,","            presenter=presenter","        )","","        post_storage.is_valid_post_id.return_value = False","        presenter.raise_invalid_post_id_exception.side_effect = NotFound","","        # Act","        with pytest.raises(NotFound):","            interactor.react_to_post(user_id=user_id,","                                     post_id=post_id,","                                     reaction_type=reaction_type)",""],"id":614},{"start":{"row":0,"column":0},"end":{"row":137,"column":0},"action":"insert","lines":["from unittest.mock import create_autospec","","import pytest","","from django_swagger_utils.drf_server.exceptions import NotFound","","from fb_post_v2.interactors.storages import PostStorageInterface","from fb_post_v2.interactors.storages import ReactionStorageInterface","","from fb_post_v2.interactors.presenters import PresenterInterface","from fb_post_v2.interactors.react_to_post_interactor import \\","    ReactToPostInteractor","","from fb_post_v2.constants import ReactionTypeEnum","","from fb_post_v2.exceptions import ReactionDoesNotExists","","","class TestReactToPostInteractor:","","    def test_react_to_post_interactor_with_first_time_react_to_post(self):","","        # Arrange","        user_id = 1","        post_id = 1","        reaction_type = ReactionTypeEnum.WOW.value","","        post_storage = create_autospec(PostStorageInterface)","        reaction_storage = create_autospec(ReactionStorageInterface)","        presenter = create_autospec(PresenterInterface)","        interactor = ReactToPostInteractor(post_storage=post_storage,","                                           reaction_storage=reaction_storage,","                                           presenter=presenter)","","        reaction_storage.validate_post_reaction_if_exists_get_reaction_type. \\","            side_effect = ReactionDoesNotExists","","        # Act","        interactor.react_to_post(user_id=user_id,","                                 post_id=post_id,","                                 reaction_type=reaction_type)","","        # Assert","        post_storage.is_valid_post_id.assert_called_once_with(post_id=post_id)","        reaction_storage.create_reaction_to_post.assert_called_once_with(","            user_id=user_id,","            post_id=post_id,","            reaction_type=reaction_type","        )","","    def test_react_to_post_interactor_with_undo_post_reaction(self):","","        # Arrange","        user_id = 1","        post_id = 1","        reaction_type = ReactionTypeEnum.WOW.value","        post_storage = create_autospec(PostStorageInterface)","        reaction_storage = create_autospec(ReactionStorageInterface)","        presenter = create_autospec(PresenterInterface)","        interactor = ReactToPostInteractor(","            post_storage=post_storage,","            reaction_storage=reaction_storage,","            presenter=presenter","        )","","        reaction_storage.validate_post_reaction_if_exists_get_reaction_type. \\","            return_value = \"WOW\"","","        # Act","        interactor.react_to_post(user_id=user_id,","                                 post_id=post_id,","                                 reaction_type=reaction_type)","","        # Assert","        post_storage.is_valid_post_id.assert_called_once_with(","            post_id=post_id)","        reaction_storage.undo_post_reaction.assert_called_once_with(","            user_id=user_id,","            post_id=post_id)","","    def test_react_to_post_interactor_with_update_post_reaction(self):","","        # Arrange","        user_id = 1","        post_id = 1","        reaction_type = ReactionTypeEnum.WOW.value","        different_reaction_type = ReactionTypeEnum.LOVE.value","        post_storage = create_autospec(PostStorageInterface)","        reaction_storage = create_autospec(ReactionStorageInterface)","        presenter = create_autospec(PresenterInterface)","        interactor = ReactToPostInteractor(","            post_storage=post_storage,","            reaction_storage=reaction_storage,","            presenter=presenter","        )","","        reaction_storage.validate_post_reaction_if_exists_get_reaction_type. \\","            return_value = different_reaction_type","","        # Act","        interactor.react_to_post(user_id=user_id,","                                 post_id=post_id,","                                 reaction_type=reaction_type)","","        # Assert","        post_storage.is_valid_post_id.assert_called_once_with(","            post_id=post_id)","        reaction_storage.update_post_reaction.assert_called_once_with(","            user_id=user_id, post_id=post_id, reaction_type=reaction_type","        )","","    def test_react_to_post_interactor_with_invalid_post_id_raise_exception(","            self","    ):","","        # Arrange","        user_id = 1","        post_id = -1","        reaction_type = ReactionTypeEnum.WOW.value","","        post_storage = create_autospec(PostStorageInterface)","        reaction_storage = create_autospec(ReactionStorageInterface)","        presenter = create_autospec(PresenterInterface)","        interactor = ReactToPostInteractor(","            post_storage=post_storage,","            reaction_storage=reaction_storage,","            presenter=presenter","        )","","        post_storage.is_valid_post_id.return_value = False","        presenter.raise_invalid_post_id_exception.side_effect = NotFound","","        # Act","        with pytest.raises(NotFound):","            interactor.react_to_post(user_id=user_id,","                                     post_id=post_id,","                                     reaction_type=reaction_type)",""]}],[{"start":{"row":411,"column":0},"end":{"row":548,"column":0},"action":"insert","lines":["from unittest.mock import create_autospec","","import pytest","","from django_swagger_utils.drf_server.exceptions import NotFound","","from fb_post_v2.interactors.storages import PostStorageInterface","from fb_post_v2.interactors.storages import ReactionStorageInterface","","from fb_post_v2.interactors.presenters import PresenterInterface","from fb_post_v2.interactors.react_to_post_interactor import \\","    ReactToPostInteractor","","from fb_post_v2.constants import ReactionTypeEnum","","from fb_post_v2.exceptions import ReactionDoesNotExists","","","class TestReactToPostInteractor:","","    def test_react_to_post_interactor_with_first_time_react_to_post(self):","","        # Arrange","        user_id = 1","        post_id = 1","        reaction_type = ReactionTypeEnum.WOW.value","","        post_storage = create_autospec(PostStorageInterface)","        reaction_storage = create_autospec(ReactionStorageInterface)","        presenter = create_autospec(PresenterInterface)","        interactor = ReactToPostInteractor(post_storage=post_storage,","                                           reaction_storage=reaction_storage,","                                           presenter=presenter)","","        reaction_storage.validate_post_reaction_if_exists_get_reaction_type. \\","            side_effect = ReactionDoesNotExists","","        # Act","        interactor.react_to_post(user_id=user_id,","                                 post_id=post_id,","                                 reaction_type=reaction_type)","","        # Assert","        post_storage.is_valid_post_id.assert_called_once_with(post_id=post_id)","        reaction_storage.create_reaction_to_post.assert_called_once_with(","            user_id=user_id,","            post_id=post_id,","            reaction_type=reaction_type","        )","","    def test_react_to_post_interactor_with_undo_post_reaction(self):","","        # Arrange","        user_id = 1","        post_id = 1","        reaction_type = ReactionTypeEnum.WOW.value","        post_storage = create_autospec(PostStorageInterface)","        reaction_storage = create_autospec(ReactionStorageInterface)","        presenter = create_autospec(PresenterInterface)","        interactor = ReactToPostInteractor(","            post_storage=post_storage,","            reaction_storage=reaction_storage,","            presenter=presenter","        )","","        reaction_storage.validate_post_reaction_if_exists_get_reaction_type. \\","            return_value = \"WOW\"","","        # Act","        interactor.react_to_post(user_id=user_id,","                                 post_id=post_id,","                                 reaction_type=reaction_type)","","        # Assert","        post_storage.is_valid_post_id.assert_called_once_with(","            post_id=post_id)","        reaction_storage.undo_post_reaction.assert_called_once_with(","            user_id=user_id,","            post_id=post_id)","","    def test_react_to_post_interactor_with_update_post_reaction(self):","","        # Arrange","        user_id = 1","        post_id = 1","        reaction_type = ReactionTypeEnum.WOW.value","        different_reaction_type = ReactionTypeEnum.LOVE.value","        post_storage = create_autospec(PostStorageInterface)","        reaction_storage = create_autospec(ReactionStorageInterface)","        presenter = create_autospec(PresenterInterface)","        interactor = ReactToPostInteractor(","            post_storage=post_storage,","            reaction_storage=reaction_storage,","            presenter=presenter","        )","","        reaction_storage.validate_post_reaction_if_exists_get_reaction_type. \\","            return_value = different_reaction_type","","        # Act","        interactor.react_to_post(user_id=user_id,","                                 post_id=post_id,","                                 reaction_type=reaction_type)","","        # Assert","        post_storage.is_valid_post_id.assert_called_once_with(","            post_id=post_id)","        reaction_storage.update_post_reaction.assert_called_once_with(","            user_id=user_id, post_id=post_id, reaction_type=reaction_type","        )","","    def test_react_to_post_interactor_with_invalid_post_id_raise_exception(","            self","    ):","","        # Arrange","        user_id = 1","        post_id = -1","        reaction_type = ReactionTypeEnum.WOW.value","","        post_storage = create_autospec(PostStorageInterface)","        reaction_storage = create_autospec(ReactionStorageInterface)","        presenter = create_autospec(PresenterInterface)","        interactor = ReactToPostInteractor(","            post_storage=post_storage,","            reaction_storage=reaction_storage,","            presenter=presenter","        )","","        post_storage.is_valid_post_id.return_value = False","        presenter.raise_invalid_post_id_exception.side_effect = NotFound","","        # Act","        with pytest.raises(NotFound):","            interactor.react_to_post(user_id=user_id,","                                     post_id=post_id,","                                     reaction_type=reaction_type)",""],"id":618}],[{"start":{"row":274,"column":0},"end":{"row":411,"column":0},"action":"insert","lines":["from unittest.mock import create_autospec","","import pytest","","from django_swagger_utils.drf_server.exceptions import NotFound","","from fb_post_v2.interactors.storages import PostStorageInterface","from fb_post_v2.interactors.storages import ReactionStorageInterface","","from fb_post_v2.interactors.presenters import PresenterInterface","from fb_post_v2.interactors.react_to_post_interactor import \\","    ReactToPostInteractor","","from fb_post_v2.constants import ReactionTypeEnum","","from fb_post_v2.exceptions import ReactionDoesNotExists","","","class TestReactToPostInteractor:","","    def test_react_to_post_interactor_with_first_time_react_to_post(self):","","        # Arrange","        user_id = 1","        post_id = 1","        reaction_type = ReactionTypeEnum.WOW.value","","        post_storage = create_autospec(PostStorageInterface)","        reaction_storage = create_autospec(ReactionStorageInterface)","        presenter = create_autospec(PresenterInterface)","        interactor = ReactToPostInteractor(post_storage=post_storage,","                                           reaction_storage=reaction_storage,","                                           presenter=presenter)","","        reaction_storage.validate_post_reaction_if_exists_get_reaction_type. \\","            side_effect = ReactionDoesNotExists","","        # Act","        interactor.react_to_post(user_id=user_id,","                                 post_id=post_id,","                                 reaction_type=reaction_type)","","        # Assert","        post_storage.is_valid_post_id.assert_called_once_with(post_id=post_id)","        reaction_storage.create_reaction_to_post.assert_called_once_with(","            user_id=user_id,","            post_id=post_id,","            reaction_type=reaction_type","        )","","    def test_react_to_post_interactor_with_undo_post_reaction(self):","","        # Arrange","        user_id = 1","        post_id = 1","        reaction_type = ReactionTypeEnum.WOW.value","        post_storage = create_autospec(PostStorageInterface)","        reaction_storage = create_autospec(ReactionStorageInterface)","        presenter = create_autospec(PresenterInterface)","        interactor = ReactToPostInteractor(","            post_storage=post_storage,","            reaction_storage=reaction_storage,","            presenter=presenter","        )","","        reaction_storage.validate_post_reaction_if_exists_get_reaction_type. \\","            return_value = \"WOW\"","","        # Act","        interactor.react_to_post(user_id=user_id,","                                 post_id=post_id,","                                 reaction_type=reaction_type)","","        # Assert","        post_storage.is_valid_post_id.assert_called_once_with(","            post_id=post_id)","        reaction_storage.undo_post_reaction.assert_called_once_with(","            user_id=user_id,","            post_id=post_id)","","    def test_react_to_post_interactor_with_update_post_reaction(self):","","        # Arrange","        user_id = 1","        post_id = 1","        reaction_type = ReactionTypeEnum.WOW.value","        different_reaction_type = ReactionTypeEnum.LOVE.value","        post_storage = create_autospec(PostStorageInterface)","        reaction_storage = create_autospec(ReactionStorageInterface)","        presenter = create_autospec(PresenterInterface)","        interactor = ReactToPostInteractor(","            post_storage=post_storage,","            reaction_storage=reaction_storage,","            presenter=presenter","        )","","        reaction_storage.validate_post_reaction_if_exists_get_reaction_type. \\","            return_value = different_reaction_type","","        # Act","        interactor.react_to_post(user_id=user_id,","                                 post_id=post_id,","                                 reaction_type=reaction_type)","","        # Assert","        post_storage.is_valid_post_id.assert_called_once_with(","            post_id=post_id)","        reaction_storage.update_post_reaction.assert_called_once_with(","            user_id=user_id, post_id=post_id, reaction_type=reaction_type","        )","","    def test_react_to_post_interactor_with_invalid_post_id_raise_exception(","            self","    ):","","        # Arrange","        user_id = 1","        post_id = -1","        reaction_type = ReactionTypeEnum.WOW.value","","        post_storage = create_autospec(PostStorageInterface)","        reaction_storage = create_autospec(ReactionStorageInterface)","        presenter = create_autospec(PresenterInterface)","        interactor = ReactToPostInteractor(","            post_storage=post_storage,","            reaction_storage=reaction_storage,","            presenter=presenter","        )","","        post_storage.is_valid_post_id.return_value = False","        presenter.raise_invalid_post_id_exception.side_effect = NotFound","","        # Act","        with pytest.raises(NotFound):","            interactor.react_to_post(user_id=user_id,","                                     post_id=post_id,","                                     reaction_type=reaction_type)",""],"id":618}],[{"start":{"row":137,"column":0},"end":{"row":274,"column":0},"action":"insert","lines":["from unittest.mock import create_autospec","","import pytest","","from django_swagger_utils.drf_server.exceptions import NotFound","","from fb_post_v2.interactors.storages import PostStorageInterface","from fb_post_v2.interactors.storages import ReactionStorageInterface","","from fb_post_v2.interactors.presenters import PresenterInterface","from fb_post_v2.interactors.react_to_post_interactor import \\","    ReactToPostInteractor","","from fb_post_v2.constants import ReactionTypeEnum","","from fb_post_v2.exceptions import ReactionDoesNotExists","","","class TestReactToPostInteractor:","","    def test_react_to_post_interactor_with_first_time_react_to_post(self):","","        # Arrange","        user_id = 1","        post_id = 1","        reaction_type = ReactionTypeEnum.WOW.value","","        post_storage = create_autospec(PostStorageInterface)","        reaction_storage = create_autospec(ReactionStorageInterface)","        presenter = create_autospec(PresenterInterface)","        interactor = ReactToPostInteractor(post_storage=post_storage,","                                           reaction_storage=reaction_storage,","                                           presenter=presenter)","","        reaction_storage.validate_post_reaction_if_exists_get_reaction_type. \\","            side_effect = ReactionDoesNotExists","","        # Act","        interactor.react_to_post(user_id=user_id,","                                 post_id=post_id,","                                 reaction_type=reaction_type)","","        # Assert","        post_storage.is_valid_post_id.assert_called_once_with(post_id=post_id)","        reaction_storage.create_reaction_to_post.assert_called_once_with(","            user_id=user_id,","            post_id=post_id,","            reaction_type=reaction_type","        )","","    def test_react_to_post_interactor_with_undo_post_reaction(self):","","        # Arrange","        user_id = 1","        post_id = 1","        reaction_type = ReactionTypeEnum.WOW.value","        post_storage = create_autospec(PostStorageInterface)","        reaction_storage = create_autospec(ReactionStorageInterface)","        presenter = create_autospec(PresenterInterface)","        interactor = ReactToPostInteractor(","            post_storage=post_storage,","            reaction_storage=reaction_storage,","            presenter=presenter","        )","","        reaction_storage.validate_post_reaction_if_exists_get_reaction_type. \\","            return_value = \"WOW\"","","        # Act","        interactor.react_to_post(user_id=user_id,","                                 post_id=post_id,","                                 reaction_type=reaction_type)","","        # Assert","        post_storage.is_valid_post_id.assert_called_once_with(","            post_id=post_id)","        reaction_storage.undo_post_reaction.assert_called_once_with(","            user_id=user_id,","            post_id=post_id)","","    def test_react_to_post_interactor_with_update_post_reaction(self):","","        # Arrange","        user_id = 1","        post_id = 1","        reaction_type = ReactionTypeEnum.WOW.value","        different_reaction_type = ReactionTypeEnum.LOVE.value","        post_storage = create_autospec(PostStorageInterface)","        reaction_storage = create_autospec(ReactionStorageInterface)","        presenter = create_autospec(PresenterInterface)","        interactor = ReactToPostInteractor(","            post_storage=post_storage,","            reaction_storage=reaction_storage,","            presenter=presenter","        )","","        reaction_storage.validate_post_reaction_if_exists_get_reaction_type. \\","            return_value = different_reaction_type","","        # Act","        interactor.react_to_post(user_id=user_id,","                                 post_id=post_id,","                                 reaction_type=reaction_type)","","        # Assert","        post_storage.is_valid_post_id.assert_called_once_with(","            post_id=post_id)","        reaction_storage.update_post_reaction.assert_called_once_with(","            user_id=user_id, post_id=post_id, reaction_type=reaction_type","        )","","    def test_react_to_post_interactor_with_invalid_post_id_raise_exception(","            self","    ):","","        # Arrange","        user_id = 1","        post_id = -1","        reaction_type = ReactionTypeEnum.WOW.value","","        post_storage = create_autospec(PostStorageInterface)","        reaction_storage = create_autospec(ReactionStorageInterface)","        presenter = create_autospec(PresenterInterface)","        interactor = ReactToPostInteractor(","            post_storage=post_storage,","            reaction_storage=reaction_storage,","            presenter=presenter","        )","","        post_storage.is_valid_post_id.return_value = False","        presenter.raise_invalid_post_id_exception.side_effect = NotFound","","        # Act","        with pytest.raises(NotFound):","            interactor.react_to_post(user_id=user_id,","                                     post_id=post_id,","                                     reaction_type=reaction_type)",""],"id":619}],[{"start":{"row":0,"column":0},"end":{"row":137,"column":0},"action":"remove","lines":["from unittest.mock import create_autospec","","import pytest","","from django_swagger_utils.drf_server.exceptions import NotFound","","from fb_post_v2.interactors.storages import PostStorageInterface","from fb_post_v2.interactors.storages import ReactionStorageInterface","","from fb_post_v2.interactors.presenters import PresenterInterface","from fb_post_v2.interactors.react_to_post_interactor import \\","    ReactToPostInteractor","","from fb_post_v2.constants import ReactionTypeEnum","","from fb_post_v2.exceptions import ReactionDoesNotExists","","","class TestReactToPostInteractor:","","    def test_react_to_post_interactor_with_first_time_react_to_post(self):","","        # Arrange","        user_id = 1","        post_id = 1","        reaction_type = ReactionTypeEnum.WOW.value","","        post_storage = create_autospec(PostStorageInterface)","        reaction_storage = create_autospec(ReactionStorageInterface)","        presenter = create_autospec(PresenterInterface)","        interactor = ReactToPostInteractor(post_storage=post_storage,","                                           reaction_storage=reaction_storage,","                                           presenter=presenter)","","        reaction_storage.validate_post_reaction_if_exists_get_reaction_type. \\","            side_effect = ReactionDoesNotExists","","        # Act","        interactor.react_to_post(user_id=user_id,","                                 post_id=post_id,","                                 reaction_type=reaction_type)","","        # Assert","        post_storage.is_valid_post_id.assert_called_once_with(post_id=post_id)","        reaction_storage.create_reaction_to_post.assert_called_once_with(","            user_id=user_id,","            post_id=post_id,","            reaction_type=reaction_type","        )","","    def test_react_to_post_interactor_with_undo_post_reaction(self):","","        # Arrange","        user_id = 1","        post_id = 1","        reaction_type = ReactionTypeEnum.WOW.value","        post_storage = create_autospec(PostStorageInterface)","        reaction_storage = create_autospec(ReactionStorageInterface)","        presenter = create_autospec(PresenterInterface)","        interactor = ReactToPostInteractor(","            post_storage=post_storage,","            reaction_storage=reaction_storage,","            presenter=presenter","        )","","        reaction_storage.validate_post_reaction_if_exists_get_reaction_type. \\","            return_value = \"WOW\"","","        # Act","        interactor.react_to_post(user_id=user_id,","                                 post_id=post_id,","                                 reaction_type=reaction_type)","","        # Assert","        post_storage.is_valid_post_id.assert_called_once_with(","            post_id=post_id)","        reaction_storage.undo_post_reaction.assert_called_once_with(","            user_id=user_id,","            post_id=post_id)","","    def test_react_to_post_interactor_with_update_post_reaction(self):","","        # Arrange","        user_id = 1","        post_id = 1","        reaction_type = ReactionTypeEnum.WOW.value","        different_reaction_type = ReactionTypeEnum.LOVE.value","        post_storage = create_autospec(PostStorageInterface)","        reaction_storage = create_autospec(ReactionStorageInterface)","        presenter = create_autospec(PresenterInterface)","        interactor = ReactToPostInteractor(","            post_storage=post_storage,","            reaction_storage=reaction_storage,","            presenter=presenter","        )","","        reaction_storage.validate_post_reaction_if_exists_get_reaction_type. \\","            return_value = different_reaction_type","","        # Act","        interactor.react_to_post(user_id=user_id,","                                 post_id=post_id,","                                 reaction_type=reaction_type)","","        # Assert","        post_storage.is_valid_post_id.assert_called_once_with(","            post_id=post_id)","        reaction_storage.update_post_reaction.assert_called_once_with(","            user_id=user_id, post_id=post_id, reaction_type=reaction_type","        )","","    def test_react_to_post_interactor_with_invalid_post_id_raise_exception(","            self","    ):","","        # Arrange","        user_id = 1","        post_id = -1","        reaction_type = ReactionTypeEnum.WOW.value","","        post_storage = create_autospec(PostStorageInterface)","        reaction_storage = create_autospec(ReactionStorageInterface)","        presenter = create_autospec(PresenterInterface)","        interactor = ReactToPostInteractor(","            post_storage=post_storage,","            reaction_storage=reaction_storage,","            presenter=presenter","        )","","        post_storage.is_valid_post_id.return_value = False","        presenter.raise_invalid_post_id_exception.side_effect = NotFound","","        # Act","        with pytest.raises(NotFound):","            interactor.react_to_post(user_id=user_id,","                                     post_id=post_id,","                                     reaction_type=reaction_type)",""],"id":620},{"start":{"row":0,"column":0},"end":{"row":137,"column":0},"action":"insert","lines":["from unittest.mock import create_autospec","","import pytest","","from django_swagger_utils.drf_server.exceptions import NotFound","","from fb_post_v2.interactors.storages import PostStorageInterface","from fb_post_v2.interactors.storages import ReactionStorageInterface","","from fb_post_v2.interactors.presenters import PresenterInterface","from fb_post_v2.interactors.react_to_post_interactor import \\","    ReactToPostInteractor","","from fb_post_v2.constants import ReactionTypeEnum","","from fb_post_v2.exceptions import ReactionDoesNotExists","","","class TestReactToPostInteractor:","","    def test_react_to_post_interactor_with_first_time_react_to_post(self):","","        # Arrange","        user_id = 1","        post_id = 1","        reaction_type = ReactionTypeEnum.WOW.value","","        post_storage = create_autospec(PostStorageInterface)","        reaction_storage = create_autospec(ReactionStorageInterface)","        presenter = create_autospec(PresenterInterface)","        interactor = ReactToPostInteractor(post_storage=post_storage,","                                           reaction_storage=reaction_storage,","                                           presenter=presenter)","","        reaction_storage.validate_post_reaction_if_exists_get_reaction_type. \\","            side_effect = ReactionDoesNotExists","","        # Act","        interactor.react_to_post(user_id=user_id,","                                 post_id=post_id,","                                 reaction_type=reaction_type)","","        # Assert","        post_storage.is_valid_post_id.assert_called_once_with(post_id=post_id)","        reaction_storage.create_reaction_to_post.assert_called_once_with(","            user_id=user_id,","            post_id=post_id,","            reaction_type=reaction_type","        )","","    def test_react_to_post_interactor_with_undo_post_reaction(self):","","        # Arrange","        user_id = 1","        post_id = 1","        reaction_type = ReactionTypeEnum.WOW.value","        post_storage = create_autospec(PostStorageInterface)","        reaction_storage = create_autospec(ReactionStorageInterface)","        presenter = create_autospec(PresenterInterface)","        interactor = ReactToPostInteractor(","            post_storage=post_storage,","            reaction_storage=reaction_storage,","            presenter=presenter","        )","","        reaction_storage.validate_post_reaction_if_exists_get_reaction_type. \\","            return_value = \"WOW\"","","        # Act","        interactor.react_to_post(user_id=user_id,","                                 post_id=post_id,","                                 reaction_type=reaction_type)","","        # Assert","        post_storage.is_valid_post_id.assert_called_once_with(","            post_id=post_id)","        reaction_storage.undo_post_reaction.assert_called_once_with(","            user_id=user_id,","            post_id=post_id)","","    def test_react_to_post_interactor_with_update_post_reaction(self):","","        # Arrange","        user_id = 1","        post_id = 1","        reaction_type = ReactionTypeEnum.WOW.value","        different_reaction_type = ReactionTypeEnum.LOVE.value","        post_storage = create_autospec(PostStorageInterface)","        reaction_storage = create_autospec(ReactionStorageInterface)","        presenter = create_autospec(PresenterInterface)","        interactor = ReactToPostInteractor(","            post_storage=post_storage,","            reaction_storage=reaction_storage,","            presenter=presenter","        )","","        reaction_storage.validate_post_reaction_if_exists_get_reaction_type. \\","            return_value = different_reaction_type","","        # Act","        interactor.react_to_post(user_id=user_id,","                                 post_id=post_id,","                                 reaction_type=reaction_type)","","        # Assert","        post_storage.is_valid_post_id.assert_called_once_with(","            post_id=post_id)","        reaction_storage.update_post_reaction.assert_called_once_with(","            user_id=user_id, post_id=post_id, reaction_type=reaction_type","        )","","    def test_react_to_post_interactor_with_invalid_post_id_raise_exception(","            self","    ):","","        # Arrange","        user_id = 1","        post_id = -1","        reaction_type = ReactionTypeEnum.WOW.value","","        post_storage = create_autospec(PostStorageInterface)","        reaction_storage = create_autospec(ReactionStorageInterface)","        presenter = create_autospec(PresenterInterface)","        interactor = ReactToPostInteractor(","            post_storage=post_storage,","            reaction_storage=reaction_storage,","            presenter=presenter","        )","","        post_storage.is_valid_post_id.return_value = False","        presenter.raise_invalid_post_id_exception.side_effect = NotFound","","        # Act","        with pytest.raises(NotFound):","            interactor.react_to_post(user_id=user_id,","                                     post_id=post_id,","                                     reaction_type=reaction_type)",""]}]]},"ace":{"folds":[],"scrolltop":1901.2356213137962,"scrollleft":0,"selection":{"start":{"row":137,"column":0},"end":{"row":137,"column":0},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":110,"state":"start","mode":"ace/mode/python"}},"timestamp":1590225081806,"hash":"d021ac0a6c424add5c19ec1c58821a0488cd9b1f"}