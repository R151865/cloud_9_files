{"filter":false,"title":"reaction_storage_interface.py","tooltip":"/fb_post_learning/fb_post_v2/interactors/storages/reaction_storage_interface.py","undoManager":{"mark":47,"position":47,"stack":[[{"start":{"row":0,"column":0},"end":{"row":124,"column":12},"action":"insert","lines":["from abc import ABC, abstractmethod","","from typing import Dict,List, Optional","","from fb_post_v2.constants import ReactionTypeEnum","","from fb_post_v2.interactors.storages.dtos  import (","    PostReactionsDto, CommentRepliesDto, PostCompleteDetailsDto,","    ReactionMetricsDto, TotalReactionCountDto",")","","","class StorageInterface():","","    @abstractmethod","    def create_post(self, user_id: int, post_content: str) ->int:","        pass","    ","    @abstractmethod","    def create_comment(self, user_id: int, post_id: int,","                       comment_content: str) ->int:","        pass","","    @abstractmethod","    def is_valid_post_id(self, post_id: int):","        pass","    ","    @abstractmethod","    def is_valid_comment_id(self, comment_id):","        pass","    ","    @abstractmethod","    def reply_to_comment(self, user_id: int,","                         comment_id: int,","                         reply_content: str) ->int:","        pass","    @abstractmethod","    def return_comment_id_if_is_comment_id_or_return_parent_comment_id(","        self, comment_id: int) ->int:","        pass","","    @abstractmethod","    def is_valid_user_id(self, user_id: int):","        pass","","    @abstractmethod","    def is_post_created_by_user(self, user_id: int, post_id: int):","        pass","","    @abstractmethod","    def delete_post(self, post_id: int):","        pass","","    @abstractmethod","    def get_replies_for_comment_dto(","            self, comment_id: int) ->List[CommentRepliesDto]:  #ToDo return type need to mention -done","        pass","","    @abstractmethod","    def validate_post_reaction_if_exists_get_reaction_type(","        self, user_id: int, post_id: int)->ReactionTypeEnum:","        pass","","    @abstractmethod","    def validate_comment_reaction_if_exists_get_reaction_type(","        self, user_id: int, comment_id: int)->ReactionTypeEnum:","        pass","","    @abstractmethod","    def create_reaction_to_post(","        self, user_id: int, post_id: int,","        reaction_type: ReactionTypeEnum","    ):","        pass","","    @abstractmethod","    def undo_post_reaction(self, user_id: int, post_id: int):","        pass","","    @abstractmethod","    def update_post_reaction(self, user_id: int, post_id: int,","                             reaction_type: ReactionTypeEnum):","        pass","","    @abstractmethod","    def create_reaction_to_comment(self, user_id: int, comment_id: int,","                                    reaction_type: ReactionTypeEnum):","        pass","","    @abstractmethod","    def undo_comment_reaction(self, user_id: int, comment_id: int):","        pass","","    @abstractmethod","    def update_comment_reaction(self, user_id: int, comment_id: int,","                             reaction_type: ReactionTypeEnum):","        pass","","    @abstractmethod","    def get_total_reaction_count_dto(self) ->TotalReactionCountDto:","        pass","","    @abstractmethod","    def get_reaction_metrics_dto(self, post_id: int) ->List[ReactionMetricsDto]:","        pass","","    @abstractmethod","    def get_posts_with_more_positive_reactions(self) ->List[Optional[int]]:","        pass","","    @abstractmethod","    def get_posts_reacted_by_user(self, user_id:int) ->List[Optional[int]]:","        pass","","    @abstractmethod","    def get_reactions_to_post_dto(self, post_id: int) ->List[PostReactionsDto]:","        pass","","    @abstractmethod","    def get_post_dto(self, post_id: int) ->PostCompleteDetailsDto:","        pass","","    @abstractmethod","    def get_user_posts_dto(self, user_id: int) ->List[PostCompleteDetailsDto]:# -done returning type","        pass"],"id":1}],[{"start":{"row":12,"column":24},"end":{"row":124,"column":12},"action":"remove","lines":[":","","    @abstractmethod","    def create_post(self, user_id: int, post_content: str) ->int:","        pass","    ","    @abstractmethod","    def create_comment(self, user_id: int, post_id: int,","                       comment_content: str) ->int:","        pass","","    @abstractmethod","    def is_valid_post_id(self, post_id: int):","        pass","    ","    @abstractmethod","    def is_valid_comment_id(self, comment_id):","        pass","    ","    @abstractmethod","    def reply_to_comment(self, user_id: int,","                         comment_id: int,","                         reply_content: str) ->int:","        pass","    @abstractmethod","    def return_comment_id_if_is_comment_id_or_return_parent_comment_id(","        self, comment_id: int) ->int:","        pass","","    @abstractmethod","    def is_valid_user_id(self, user_id: int):","        pass","","    @abstractmethod","    def is_post_created_by_user(self, user_id: int, post_id: int):","        pass","","    @abstractmethod","    def delete_post(self, post_id: int):","        pass","","    @abstractmethod","    def get_replies_for_comment_dto(","            self, comment_id: int) ->List[CommentRepliesDto]:  #ToDo return type need to mention -done","        pass","","    @abstractmethod","    def validate_post_reaction_if_exists_get_reaction_type(","        self, user_id: int, post_id: int)->ReactionTypeEnum:","        pass","","    @abstractmethod","    def validate_comment_reaction_if_exists_get_reaction_type(","        self, user_id: int, comment_id: int)->ReactionTypeEnum:","        pass","","    @abstractmethod","    def create_reaction_to_post(","        self, user_id: int, post_id: int,","        reaction_type: ReactionTypeEnum","    ):","        pass","","    @abstractmethod","    def undo_post_reaction(self, user_id: int, post_id: int):","        pass","","    @abstractmethod","    def update_post_reaction(self, user_id: int, post_id: int,","                             reaction_type: ReactionTypeEnum):","        pass","","    @abstractmethod","    def create_reaction_to_comment(self, user_id: int, comment_id: int,","                                    reaction_type: ReactionTypeEnum):","        pass","","    @abstractmethod","    def undo_comment_reaction(self, user_id: int, comment_id: int):","        pass","","    @abstractmethod","    def update_comment_reaction(self, user_id: int, comment_id: int,","                             reaction_type: ReactionTypeEnum):","        pass","","    @abstractmethod","    def get_total_reaction_count_dto(self) ->TotalReactionCountDto:","        pass","","    @abstractmethod","    def get_reaction_metrics_dto(self, post_id: int) ->List[ReactionMetricsDto]:","        pass","","    @abstractmethod","    def get_posts_with_more_positive_reactions(self) ->List[Optional[int]]:","        pass","","    @abstractmethod","    def get_posts_reacted_by_user(self, user_id:int) ->List[Optional[int]]:","        pass","","    @abstractmethod","    def get_reactions_to_post_dto(self, post_id: int) ->List[PostReactionsDto]:","        pass","","    @abstractmethod","    def get_post_dto(self, post_id: int) ->PostCompleteDetailsDto:","        pass","","    @abstractmethod","    def get_user_posts_dto(self, user_id: int) ->List[PostCompleteDetailsDto]:# -done returning type","        pass"],"id":1}],[{"start":{"row":12,"column":24},"end":{"row":12,"column":25},"action":"insert","lines":[":"],"id":3}],[{"start":{"row":12,"column":6},"end":{"row":12,"column":7},"action":"insert","lines":["R"],"id":4},{"start":{"row":12,"column":7},"end":{"row":12,"column":8},"action":"insert","lines":["e"]},{"start":{"row":12,"column":8},"end":{"row":12,"column":9},"action":"insert","lines":["a"]},{"start":{"row":12,"column":9},"end":{"row":12,"column":10},"action":"insert","lines":["c"]},{"start":{"row":12,"column":10},"end":{"row":12,"column":11},"action":"insert","lines":["t"]},{"start":{"row":12,"column":11},"end":{"row":12,"column":12},"action":"insert","lines":["i"]},{"start":{"row":12,"column":12},"end":{"row":12,"column":13},"action":"insert","lines":["o"]},{"start":{"row":12,"column":13},"end":{"row":12,"column":14},"action":"insert","lines":["n"]}],[{"start":{"row":12,"column":33},"end":{"row":13,"column":0},"action":"insert","lines":["",""],"id":5},{"start":{"row":13,"column":0},"end":{"row":13,"column":4},"action":"insert","lines":["    "]}],[{"start":{"row":13,"column":4},"end":{"row":13,"column":6},"action":"insert","lines":["[]"],"id":6}],[{"start":{"row":13,"column":4},"end":{"row":13,"column":6},"action":"remove","lines":["[]"],"id":7},{"start":{"row":13,"column":0},"end":{"row":13,"column":4},"action":"remove","lines":["    "]}],[{"start":{"row":13,"column":0},"end":{"row":13,"column":1},"action":"insert","lines":["p"],"id":8},{"start":{"row":13,"column":1},"end":{"row":13,"column":2},"action":"insert","lines":["a"]},{"start":{"row":13,"column":2},"end":{"row":13,"column":3},"action":"insert","lines":["s"]},{"start":{"row":13,"column":3},"end":{"row":13,"column":4},"action":"insert","lines":["s"]}],[{"start":{"row":13,"column":3},"end":{"row":13,"column":4},"action":"remove","lines":["s"],"id":9},{"start":{"row":13,"column":2},"end":{"row":13,"column":3},"action":"remove","lines":["s"]},{"start":{"row":13,"column":1},"end":{"row":13,"column":2},"action":"remove","lines":["a"]},{"start":{"row":13,"column":0},"end":{"row":13,"column":1},"action":"remove","lines":["p"]}],[{"start":{"row":13,"column":0},"end":{"row":13,"column":4},"action":"insert","lines":["    "],"id":10}],[{"start":{"row":13,"column":4},"end":{"row":13,"column":5},"action":"insert","lines":["p"],"id":11},{"start":{"row":13,"column":5},"end":{"row":13,"column":6},"action":"insert","lines":["a"]},{"start":{"row":13,"column":6},"end":{"row":13,"column":7},"action":"insert","lines":["s"]},{"start":{"row":13,"column":7},"end":{"row":13,"column":8},"action":"insert","lines":["s"]}],[{"start":{"row":13,"column":7},"end":{"row":13,"column":8},"action":"remove","lines":["s"],"id":12},{"start":{"row":13,"column":6},"end":{"row":13,"column":7},"action":"remove","lines":["s"]},{"start":{"row":13,"column":5},"end":{"row":13,"column":6},"action":"remove","lines":["a"]},{"start":{"row":13,"column":4},"end":{"row":13,"column":5},"action":"remove","lines":["p"]}],[{"start":{"row":13,"column":4},"end":{"row":123,"column":12},"action":"insert","lines":["  @abstractmethod","    def create_post(self, user_id: int, post_content: str) ->int:","        pass","    ","    @abstractmethod","    def create_comment(self, user_id: int, post_id: int,","                       comment_content: str) ->int:","        pass","","    @abstractmethod","    def is_valid_post_id(self, post_id: int):","        pass","    ","    @abstractmethod","    def is_valid_comment_id(self, comment_id):","        pass","    ","    @abstractmethod","    def reply_to_comment(self, user_id: int,","                         comment_id: int,","                         reply_content: str) ->int:","        pass","    @abstractmethod","    def return_comment_id_if_is_comment_id_or_return_parent_comment_id(","        self, comment_id: int) ->int:","        pass","","    @abstractmethod","    def is_valid_user_id(self, user_id: int):","        pass","","    @abstractmethod","    def is_post_created_by_user(self, user_id: int, post_id: int):","        pass","","    @abstractmethod","    def delete_post(self, post_id: int):","        pass","","    @abstractmethod","    def get_replies_for_comment_dto(","            self, comment_id: int) ->List[CommentRepliesDto]:  #ToDo return type need to mention -done","        pass","","    @abstractmethod","    def validate_post_reaction_if_exists_get_reaction_type(","        self, user_id: int, post_id: int)->ReactionTypeEnum:","        pass","","    @abstractmethod","    def validate_comment_reaction_if_exists_get_reaction_type(","        self, user_id: int, comment_id: int)->ReactionTypeEnum:","        pass","","    @abstractmethod","    def create_reaction_to_post(","        self, user_id: int, post_id: int,","        reaction_type: ReactionTypeEnum","    ):","        pass","","    @abstractmethod","    def undo_post_reaction(self, user_id: int, post_id: int):","        pass","","    @abstractmethod","    def update_post_reaction(self, user_id: int, post_id: int,","                             reaction_type: ReactionTypeEnum):","        pass","","    @abstractmethod","    def create_reaction_to_comment(self, user_id: int, comment_id: int,","                                    reaction_type: ReactionTypeEnum):","        pass","","    @abstractmethod","    def undo_comment_reaction(self, user_id: int, comment_id: int):","        pass","","    @abstractmethod","    def update_comment_reaction(self, user_id: int, comment_id: int,","                             reaction_type: ReactionTypeEnum):","        pass","","    @abstractmethod","    def get_total_reaction_count_dto(self) ->TotalReactionCountDto:","        pass","","    @abstractmethod","    def get_reaction_metrics_dto(self, post_id: int) ->List[ReactionMetricsDto]:","        pass","","    @abstractmethod","    def get_posts_with_more_positive_reactions(self) ->List[Optional[int]]:","        pass","","    @abstractmethod","    def get_posts_reacted_by_user(self, user_id:int) ->List[Optional[int]]:","        pass","","    @abstractmethod","    def get_reactions_to_post_dto(self, post_id: int) ->List[PostReactionsDto]:","        pass","","    @abstractmethod","    def get_post_dto(self, post_id: int) ->PostCompleteDetailsDto:","        pass","","    @abstractmethod","    def get_user_posts_dto(self, user_id: int) ->List[PostCompleteDetailsDto]:# -done returning type","        pass"],"id":13}],[{"start":{"row":12,"column":33},"end":{"row":13,"column":0},"action":"insert","lines":["",""],"id":14},{"start":{"row":13,"column":0},"end":{"row":13,"column":4},"action":"insert","lines":["    "]}],[{"start":{"row":13,"column":4},"end":{"row":31,"column":4},"action":"remove","lines":["","      @abstractmethod","    def create_post(self, user_id: int, post_content: str) ->int:","        pass","    ","    @abstractmethod","    def create_comment(self, user_id: int, post_id: int,","                       comment_content: str) ->int:","        pass","","    @abstractmethod","    def is_valid_post_id(self, post_id: int):","        pass","    ","    @abstractmethod","    def is_valid_comment_id(self, comment_id):","        pass","    ","    "],"id":16}],[{"start":{"row":13,"column":4},"end":{"row":26,"column":0},"action":"remove","lines":["@abstractmethod","    def reply_to_comment(self, user_id: int,","                         comment_id: int,","                         reply_content: str) ->int:","        pass","    @abstractmethod","    def return_comment_id_if_is_comment_id_or_return_parent_comment_id(","        self, comment_id: int) ->int:","        pass","","    @abstractmethod","    def is_valid_user_id(self, user_id: int):","        pass",""],"id":17}],[{"start":{"row":13,"column":4},"end":{"row":26,"column":0},"action":"remove","lines":["","    @abstractmethod","    def is_post_created_by_user(self, user_id: int, post_id: int):","        pass","","    @abstractmethod","    def delete_post(self, post_id: int):","        pass","","    @abstractmethod","    def get_replies_for_comment_dto(","            self, comment_id: int) ->List[CommentRepliesDto]:  #ToDo return type need to mention -done","        pass",""],"id":18}],[{"start":{"row":13,"column":4},"end":{"row":23,"column":0},"action":"remove","lines":["","    @abstractmethod","    def validate_post_reaction_if_exists_get_reaction_type(","        self, user_id: int, post_id: int)->ReactionTypeEnum:","        pass","","    @abstractmethod","    def validate_comment_reaction_if_exists_get_reaction_type(","        self, user_id: int, comment_id: int)->ReactionTypeEnum:","        pass",""],"id":19}],[{"start":{"row":63,"column":0},"end":{"row":70,"column":12},"action":"remove","lines":["","    @abstractmethod","    def get_post_dto(self, post_id: int) ->PostCompleteDetailsDto:","        pass","","    @abstractmethod","    def get_user_posts_dto(self, user_id: int) ->List[PostCompleteDetailsDto]:# -done returning type","        pass"],"id":20}],[{"start":{"row":2,"column":23},"end":{"row":2,"column":24},"action":"remove","lines":[","],"id":21},{"start":{"row":2,"column":22},"end":{"row":2,"column":23},"action":"remove","lines":["t"]},{"start":{"row":2,"column":21},"end":{"row":2,"column":22},"action":"remove","lines":["c"]},{"start":{"row":2,"column":20},"end":{"row":2,"column":21},"action":"remove","lines":["i"]},{"start":{"row":2,"column":19},"end":{"row":2,"column":20},"action":"remove","lines":["D"]}],[{"start":{"row":7,"column":39},"end":{"row":7,"column":40},"action":"remove","lines":[","],"id":22},{"start":{"row":7,"column":38},"end":{"row":7,"column":39},"action":"remove","lines":["o"]},{"start":{"row":7,"column":37},"end":{"row":7,"column":38},"action":"remove","lines":["t"]},{"start":{"row":7,"column":36},"end":{"row":7,"column":37},"action":"remove","lines":["D"]},{"start":{"row":7,"column":35},"end":{"row":7,"column":36},"action":"remove","lines":["s"]},{"start":{"row":7,"column":34},"end":{"row":7,"column":35},"action":"remove","lines":["e"]},{"start":{"row":7,"column":33},"end":{"row":7,"column":34},"action":"remove","lines":["i"]},{"start":{"row":7,"column":32},"end":{"row":7,"column":33},"action":"remove","lines":["l"]},{"start":{"row":7,"column":31},"end":{"row":7,"column":32},"action":"remove","lines":["p"]},{"start":{"row":7,"column":30},"end":{"row":7,"column":31},"action":"remove","lines":["e"]},{"start":{"row":7,"column":29},"end":{"row":7,"column":30},"action":"remove","lines":["R"]},{"start":{"row":7,"column":28},"end":{"row":7,"column":29},"action":"remove","lines":["t"]},{"start":{"row":7,"column":27},"end":{"row":7,"column":28},"action":"remove","lines":["n"]},{"start":{"row":7,"column":26},"end":{"row":7,"column":27},"action":"remove","lines":["e"]},{"start":{"row":7,"column":25},"end":{"row":7,"column":26},"action":"remove","lines":["m"]},{"start":{"row":7,"column":24},"end":{"row":7,"column":25},"action":"remove","lines":["m"]},{"start":{"row":7,"column":23},"end":{"row":7,"column":24},"action":"remove","lines":["o"]}],[{"start":{"row":7,"column":22},"end":{"row":7,"column":23},"action":"remove","lines":["C"],"id":23},{"start":{"row":7,"column":21},"end":{"row":7,"column":22},"action":"remove","lines":[" "]},{"start":{"row":7,"column":20},"end":{"row":7,"column":21},"action":"remove","lines":[","]}],[{"start":{"row":7,"column":20},"end":{"row":7,"column":21},"action":"insert","lines":[","],"id":24}],[{"start":{"row":7,"column":22},"end":{"row":7,"column":45},"action":"remove","lines":["PostCompleteDetailsDto,"],"id":25}],[{"start":{"row":8,"column":0},"end":{"row":8,"column":4},"action":"remove","lines":["    "],"id":26},{"start":{"row":7,"column":22},"end":{"row":8,"column":0},"action":"remove","lines":["",""]}],[{"start":{"row":7,"column":41},"end":{"row":7,"column":42},"action":"remove","lines":[" "],"id":27}],[{"start":{"row":7,"column":41},"end":{"row":8,"column":0},"action":"insert","lines":["",""],"id":28},{"start":{"row":8,"column":0},"end":{"row":8,"column":4},"action":"insert","lines":["    "]}],[{"start":{"row":7,"column":22},"end":{"row":8,"column":0},"action":"insert","lines":["",""],"id":29},{"start":{"row":8,"column":0},"end":{"row":8,"column":4},"action":"insert","lines":["    "]}],[{"start":{"row":7,"column":21},"end":{"row":7,"column":22},"action":"remove","lines":[" "],"id":30}],[{"start":{"row":64,"column":0},"end":{"row":65,"column":0},"action":"insert","lines":["",""],"id":31}],[{"start":{"row":65,"column":0},"end":{"row":65,"column":4},"action":"insert","lines":["    "],"id":32}],[{"start":{"row":65,"column":4},"end":{"row":69,"column":0},"action":"insert","lines":["@abstractmethod","    def validate_comment_reaction_if_exists_get_reaction_type(","        self, user_id: int, comment_id: int)->ReactionTypeEnum:","        pass",""],"id":33}],[{"start":{"row":69,"column":0},"end":{"row":70,"column":0},"action":"insert","lines":["",""],"id":34}],[{"start":{"row":70,"column":0},"end":{"row":70,"column":4},"action":"insert","lines":["    "],"id":35}],[{"start":{"row":70,"column":4},"end":{"row":74,"column":0},"action":"insert","lines":["  @abstractmethod","    def validate_post_reaction_if_exists_get_reaction_type(","        self, user_id: int, post_id: int)->ReactionTypeEnum:","        pass",""],"id":36}],[{"start":{"row":70,"column":5},"end":{"row":70,"column":6},"action":"remove","lines":[" "],"id":37},{"start":{"row":70,"column":4},"end":{"row":70,"column":5},"action":"remove","lines":[" "]}],[{"start":{"row":13,"column":33},"end":{"row":13,"column":34},"action":"insert","lines":["p"],"id":38}],[{"start":{"row":13,"column":33},"end":{"row":13,"column":34},"action":"remove","lines":["p"],"id":39}],[{"start":{"row":67,"column":8},"end":{"row":67,"column":12},"action":"insert","lines":["    "],"id":40}],[{"start":{"row":67,"column":17},"end":{"row":67,"column":18},"action":"remove","lines":[" "],"id":41}],[{"start":{"row":67,"column":17},"end":{"row":68,"column":0},"action":"insert","lines":["",""],"id":42},{"start":{"row":68,"column":0},"end":{"row":68,"column":12},"action":"insert","lines":["            "]}],[{"start":{"row":68,"column":25},"end":{"row":68,"column":26},"action":"remove","lines":[" "],"id":43}],[{"start":{"row":68,"column":25},"end":{"row":69,"column":0},"action":"insert","lines":["",""],"id":44},{"start":{"row":69,"column":0},"end":{"row":69,"column":12},"action":"insert","lines":["            "]}],[{"start":{"row":74,"column":13},"end":{"row":74,"column":14},"action":"remove","lines":[" "],"id":45}],[{"start":{"row":74,"column":8},"end":{"row":74,"column":12},"action":"insert","lines":["    "],"id":46}],[{"start":{"row":74,"column":17},"end":{"row":75,"column":0},"action":"insert","lines":["",""],"id":47},{"start":{"row":75,"column":0},"end":{"row":75,"column":12},"action":"insert","lines":["            "]}],[{"start":{"row":75,"column":25},"end":{"row":75,"column":26},"action":"remove","lines":[" "],"id":48}],[{"start":{"row":75,"column":25},"end":{"row":76,"column":0},"action":"insert","lines":["",""],"id":49},{"start":{"row":76,"column":0},"end":{"row":76,"column":12},"action":"insert","lines":["            "]}]]},"ace":{"folds":[],"scrolltop":363.4346409164955,"scrollleft":0,"selection":{"start":{"row":76,"column":12},"end":{"row":76,"column":12},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":20,"state":"start","mode":"ace/mode/python"}},"timestamp":1590224999693,"hash":"f6291ec7e6182e3e26769ec016c20a38f7c8dc2c"}