{"filter":false,"title":"comment_storage_interface.py","tooltip":"/fb_post_learning/fb_post_v2/interactors/storages/comment_storage_interface.py","undoManager":{"mark":41,"position":41,"stack":[[{"start":{"row":0,"column":0},"end":{"row":124,"column":12},"action":"insert","lines":["from abc import ABC, abstractmethod","","from typing import Dict,List, Optional","","from fb_post_v2.constants import ReactionTypeEnum","","from fb_post_v2.interactors.storages.dtos  import (","    PostReactionsDto, CommentRepliesDto, PostCompleteDetailsDto,","    ReactionMetricsDto, TotalReactionCountDto",")","","","class StorageInterface():","","    @abstractmethod","    def create_post(self, user_id: int, post_content: str) ->int:","        pass","    ","    @abstractmethod","    def create_comment(self, user_id: int, post_id: int,","                       comment_content: str) ->int:","        pass","","    @abstractmethod","    def is_valid_post_id(self, post_id: int):","        pass","    ","    @abstractmethod","    def is_valid_comment_id(self, comment_id):","        pass","    ","    @abstractmethod","    def reply_to_comment(self, user_id: int,","                         comment_id: int,","                         reply_content: str) ->int:","        pass","    @abstractmethod","    def return_comment_id_if_is_comment_id_or_return_parent_comment_id(","        self, comment_id: int) ->int:","        pass","","    @abstractmethod","    def is_valid_user_id(self, user_id: int):","        pass","","    @abstractmethod","    def is_post_created_by_user(self, user_id: int, post_id: int):","        pass","","    @abstractmethod","    def delete_post(self, post_id: int):","        pass","","    @abstractmethod","    def get_replies_for_comment_dto(","            self, comment_id: int) ->List[CommentRepliesDto]:  #ToDo return type need to mention -done","        pass","","    @abstractmethod","    def validate_post_reaction_if_exists_get_reaction_type(","        self, user_id: int, post_id: int)->ReactionTypeEnum:","        pass","","    @abstractmethod","    def validate_comment_reaction_if_exists_get_reaction_type(","        self, user_id: int, comment_id: int)->ReactionTypeEnum:","        pass","","    @abstractmethod","    def create_reaction_to_post(","        self, user_id: int, post_id: int,","        reaction_type: ReactionTypeEnum","    ):","        pass","","    @abstractmethod","    def undo_post_reaction(self, user_id: int, post_id: int):","        pass","","    @abstractmethod","    def update_post_reaction(self, user_id: int, post_id: int,","                             reaction_type: ReactionTypeEnum):","        pass","","    @abstractmethod","    def create_reaction_to_comment(self, user_id: int, comment_id: int,","                                    reaction_type: ReactionTypeEnum):","        pass","","    @abstractmethod","    def undo_comment_reaction(self, user_id: int, comment_id: int):","        pass","","    @abstractmethod","    def update_comment_reaction(self, user_id: int, comment_id: int,","                             reaction_type: ReactionTypeEnum):","        pass","","    @abstractmethod","    def get_total_reaction_count_dto(self) ->TotalReactionCountDto:","        pass","","    @abstractmethod","    def get_reaction_metrics_dto(self, post_id: int) ->List[ReactionMetricsDto]:","        pass","","    @abstractmethod","    def get_posts_with_more_positive_reactions(self) ->List[Optional[int]]:","        pass","","    @abstractmethod","    def get_posts_reacted_by_user(self, user_id:int) ->List[Optional[int]]:","        pass","","    @abstractmethod","    def get_reactions_to_post_dto(self, post_id: int) ->List[PostReactionsDto]:","        pass","","    @abstractmethod","    def get_post_dto(self, post_id: int) ->PostCompleteDetailsDto:","        pass","","    @abstractmethod","    def get_user_posts_dto(self, user_id: int) ->List[PostCompleteDetailsDto]:# -done returning type","        pass"],"id":1}],[{"start":{"row":12,"column":6},"end":{"row":12,"column":7},"action":"insert","lines":["C"],"id":2},{"start":{"row":12,"column":7},"end":{"row":12,"column":8},"action":"insert","lines":["o"]},{"start":{"row":12,"column":8},"end":{"row":12,"column":9},"action":"insert","lines":["m"]},{"start":{"row":12,"column":9},"end":{"row":12,"column":10},"action":"insert","lines":["m"]},{"start":{"row":12,"column":10},"end":{"row":12,"column":11},"action":"insert","lines":["e"]},{"start":{"row":12,"column":11},"end":{"row":12,"column":12},"action":"insert","lines":["n"]},{"start":{"row":12,"column":12},"end":{"row":12,"column":13},"action":"insert","lines":["t"]}],[{"start":{"row":12,"column":31},"end":{"row":124,"column":12},"action":"remove","lines":[":","","    @abstractmethod","    def create_post(self, user_id: int, post_content: str) ->int:","        pass","    ","    @abstractmethod","    def create_comment(self, user_id: int, post_id: int,","                       comment_content: str) ->int:","        pass","","    @abstractmethod","    def is_valid_post_id(self, post_id: int):","        pass","    ","    @abstractmethod","    def is_valid_comment_id(self, comment_id):","        pass","    ","    @abstractmethod","    def reply_to_comment(self, user_id: int,","                         comment_id: int,","                         reply_content: str) ->int:","        pass","    @abstractmethod","    def return_comment_id_if_is_comment_id_or_return_parent_comment_id(","        self, comment_id: int) ->int:","        pass","","    @abstractmethod","    def is_valid_user_id(self, user_id: int):","        pass","","    @abstractmethod","    def is_post_created_by_user(self, user_id: int, post_id: int):","        pass","","    @abstractmethod","    def delete_post(self, post_id: int):","        pass","","    @abstractmethod","    def get_replies_for_comment_dto(","            self, comment_id: int) ->List[CommentRepliesDto]:  #ToDo return type need to mention -done","        pass","","    @abstractmethod","    def validate_post_reaction_if_exists_get_reaction_type(","        self, user_id: int, post_id: int)->ReactionTypeEnum:","        pass","","    @abstractmethod","    def validate_comment_reaction_if_exists_get_reaction_type(","        self, user_id: int, comment_id: int)->ReactionTypeEnum:","        pass","","    @abstractmethod","    def create_reaction_to_post(","        self, user_id: int, post_id: int,","        reaction_type: ReactionTypeEnum","    ):","        pass","","    @abstractmethod","    def undo_post_reaction(self, user_id: int, post_id: int):","        pass","","    @abstractmethod","    def update_post_reaction(self, user_id: int, post_id: int,","                             reaction_type: ReactionTypeEnum):","        pass","","    @abstractmethod","    def create_reaction_to_comment(self, user_id: int, comment_id: int,","                                    reaction_type: ReactionTypeEnum):","        pass","","    @abstractmethod","    def undo_comment_reaction(self, user_id: int, comment_id: int):","        pass","","    @abstractmethod","    def update_comment_reaction(self, user_id: int, comment_id: int,","                             reaction_type: ReactionTypeEnum):","        pass","","    @abstractmethod","    def get_total_reaction_count_dto(self) ->TotalReactionCountDto:","        pass","","    @abstractmethod","    def get_reaction_metrics_dto(self, post_id: int) ->List[ReactionMetricsDto]:","        pass","","    @abstractmethod","    def get_posts_with_more_positive_reactions(self) ->List[Optional[int]]:","        pass","","    @abstractmethod","    def get_posts_reacted_by_user(self, user_id:int) ->List[Optional[int]]:","        pass","","    @abstractmethod","    def get_reactions_to_post_dto(self, post_id: int) ->List[PostReactionsDto]:","        pass","","    @abstractmethod","    def get_post_dto(self, post_id: int) ->PostCompleteDetailsDto:","        pass","","    @abstractmethod","    def get_user_posts_dto(self, user_id: int) ->List[PostCompleteDetailsDto]:# -done returning type","        pass"],"id":2}],[{"start":{"row":12,"column":31},"end":{"row":12,"column":32},"action":"insert","lines":[":"],"id":4}],[{"start":{"row":12,"column":32},"end":{"row":13,"column":0},"action":"insert","lines":["",""],"id":5},{"start":{"row":13,"column":0},"end":{"row":13,"column":4},"action":"insert","lines":["    "]},{"start":{"row":13,"column":4},"end":{"row":13,"column":5},"action":"insert","lines":["p"]},{"start":{"row":13,"column":5},"end":{"row":13,"column":6},"action":"insert","lines":["a"]},{"start":{"row":13,"column":6},"end":{"row":13,"column":7},"action":"insert","lines":["a"]},{"start":{"row":13,"column":7},"end":{"row":13,"column":8},"action":"insert","lines":["s"]}],[{"start":{"row":13,"column":7},"end":{"row":13,"column":8},"action":"remove","lines":["s"],"id":6},{"start":{"row":13,"column":6},"end":{"row":13,"column":7},"action":"remove","lines":["a"]},{"start":{"row":13,"column":5},"end":{"row":13,"column":6},"action":"remove","lines":["a"]}],[{"start":{"row":13,"column":5},"end":{"row":13,"column":6},"action":"insert","lines":["a"],"id":7},{"start":{"row":13,"column":6},"end":{"row":13,"column":7},"action":"insert","lines":["s"]},{"start":{"row":13,"column":7},"end":{"row":13,"column":8},"action":"insert","lines":["s"]}],[{"start":{"row":13,"column":7},"end":{"row":13,"column":8},"action":"remove","lines":["s"],"id":8},{"start":{"row":13,"column":6},"end":{"row":13,"column":7},"action":"remove","lines":["s"]},{"start":{"row":13,"column":5},"end":{"row":13,"column":6},"action":"remove","lines":["a"]},{"start":{"row":13,"column":4},"end":{"row":13,"column":5},"action":"remove","lines":["p"]},{"start":{"row":13,"column":0},"end":{"row":13,"column":4},"action":"remove","lines":["    "]}],[{"start":{"row":13,"column":0},"end":{"row":14,"column":0},"action":"insert","lines":["",""],"id":9}],[{"start":{"row":14,"column":0},"end":{"row":14,"column":4},"action":"insert","lines":["    "],"id":10}],[{"start":{"row":14,"column":4},"end":{"row":18,"column":0},"action":"insert","lines":["@abstractmethod","    def create_comment(self, user_id: int, post_id: int,","                       comment_content: str) ->int:","        pass",""],"id":11}],[{"start":{"row":14,"column":4},"end":{"row":18,"column":0},"action":"remove","lines":["@abstractmethod","    def create_comment(self, user_id: int, post_id: int,","                       comment_content: str) ->int:","        pass",""],"id":12},{"start":{"row":14,"column":4},"end":{"row":124,"column":12},"action":"insert","lines":["  @abstractmethod","    def create_post(self, user_id: int, post_content: str) ->int:","        pass","    ","    @abstractmethod","    def create_comment(self, user_id: int, post_id: int,","                       comment_content: str) ->int:","        pass","","    @abstractmethod","    def is_valid_post_id(self, post_id: int):","        pass","    ","    @abstractmethod","    def is_valid_comment_id(self, comment_id):","        pass","    ","    @abstractmethod","    def reply_to_comment(self, user_id: int,","                         comment_id: int,","                         reply_content: str) ->int:","        pass","    @abstractmethod","    def return_comment_id_if_is_comment_id_or_return_parent_comment_id(","        self, comment_id: int) ->int:","        pass","","    @abstractmethod","    def is_valid_user_id(self, user_id: int):","        pass","","    @abstractmethod","    def is_post_created_by_user(self, user_id: int, post_id: int):","        pass","","    @abstractmethod","    def delete_post(self, post_id: int):","        pass","","    @abstractmethod","    def get_replies_for_comment_dto(","            self, comment_id: int) ->List[CommentRepliesDto]:  #ToDo return type need to mention -done","        pass","","    @abstractmethod","    def validate_post_reaction_if_exists_get_reaction_type(","        self, user_id: int, post_id: int)->ReactionTypeEnum:","        pass","","    @abstractmethod","    def validate_comment_reaction_if_exists_get_reaction_type(","        self, user_id: int, comment_id: int)->ReactionTypeEnum:","        pass","","    @abstractmethod","    def create_reaction_to_post(","        self, user_id: int, post_id: int,","        reaction_type: ReactionTypeEnum","    ):","        pass","","    @abstractmethod","    def undo_post_reaction(self, user_id: int, post_id: int):","        pass","","    @abstractmethod","    def update_post_reaction(self, user_id: int, post_id: int,","                             reaction_type: ReactionTypeEnum):","        pass","","    @abstractmethod","    def create_reaction_to_comment(self, user_id: int, comment_id: int,","                                    reaction_type: ReactionTypeEnum):","        pass","","    @abstractmethod","    def undo_comment_reaction(self, user_id: int, comment_id: int):","        pass","","    @abstractmethod","    def update_comment_reaction(self, user_id: int, comment_id: int,","                             reaction_type: ReactionTypeEnum):","        pass","","    @abstractmethod","    def get_total_reaction_count_dto(self) ->TotalReactionCountDto:","        pass","","    @abstractmethod","    def get_reaction_metrics_dto(self, post_id: int) ->List[ReactionMetricsDto]:","        pass","","    @abstractmethod","    def get_posts_with_more_positive_reactions(self) ->List[Optional[int]]:","        pass","","    @abstractmethod","    def get_posts_reacted_by_user(self, user_id:int) ->List[Optional[int]]:","        pass","","    @abstractmethod","    def get_reactions_to_post_dto(self, post_id: int) ->List[PostReactionsDto]:","        pass","","    @abstractmethod","    def get_post_dto(self, post_id: int) ->PostCompleteDetailsDto:","        pass","","    @abstractmethod","    def get_user_posts_dto(self, user_id: int) ->List[PostCompleteDetailsDto]:# -done returning type","        pass"]}],[{"start":{"row":14,"column":4},"end":{"row":17,"column":4},"action":"remove","lines":["  @abstractmethod","    def create_post(self, user_id: int, post_content: str) ->int:","        pass","    "],"id":14}],[{"start":{"row":20,"column":4},"end":{"row":23,"column":4},"action":"remove","lines":["@abstractmethod","    def is_valid_post_id(self, post_id: int):","        pass","    "],"id":15}],[{"start":{"row":29,"column":11},"end":{"row":29,"column":12},"action":"remove","lines":["s"],"id":16},{"start":{"row":29,"column":10},"end":{"row":29,"column":11},"action":"remove","lines":["s"]},{"start":{"row":29,"column":9},"end":{"row":29,"column":10},"action":"remove","lines":["a"]},{"start":{"row":29,"column":8},"end":{"row":29,"column":9},"action":"remove","lines":["p"]},{"start":{"row":29,"column":4},"end":{"row":29,"column":8},"action":"remove","lines":["    "]},{"start":{"row":29,"column":0},"end":{"row":29,"column":4},"action":"remove","lines":["    "]}],[{"start":{"row":29,"column":0},"end":{"row":29,"column":4},"action":"insert","lines":["    "],"id":17}],[{"start":{"row":29,"column":4},"end":{"row":29,"column":8},"action":"insert","lines":["    "],"id":18}],[{"start":{"row":29,"column":8},"end":{"row":29,"column":9},"action":"insert","lines":["p"],"id":19},{"start":{"row":29,"column":9},"end":{"row":29,"column":10},"action":"insert","lines":["a"]},{"start":{"row":29,"column":10},"end":{"row":29,"column":11},"action":"insert","lines":["s"]},{"start":{"row":29,"column":11},"end":{"row":29,"column":12},"action":"insert","lines":["s"]}],[{"start":{"row":29,"column":12},"end":{"row":30,"column":0},"action":"insert","lines":["",""],"id":20},{"start":{"row":30,"column":0},"end":{"row":30,"column":8},"action":"insert","lines":["        "]},{"start":{"row":30,"column":4},"end":{"row":30,"column":8},"action":"remove","lines":["    "]}],[{"start":{"row":30,"column":0},"end":{"row":30,"column":4},"action":"remove","lines":["    "],"id":21}],[{"start":{"row":36,"column":0},"end":{"row":39,"column":0},"action":"remove","lines":["    @abstractmethod","    def is_valid_user_id(self, user_id: int):","        pass",""],"id":22}],[{"start":{"row":36,"column":0},"end":{"row":40,"column":0},"action":"remove","lines":["","    @abstractmethod","    def is_post_created_by_user(self, user_id: int, post_id: int):","        pass",""],"id":23}],[{"start":{"row":36,"column":0},"end":{"row":40,"column":0},"action":"remove","lines":["","    @abstractmethod","    def delete_post(self, post_id: int):","        pass",""],"id":24}],[{"start":{"row":42,"column":0},"end":{"row":46,"column":0},"action":"remove","lines":["    @abstractmethod","    def validate_post_reaction_if_exists_get_reaction_type(","        self, user_id: int, post_id: int)->ReactionTypeEnum:","        pass",""],"id":25}],[{"start":{"row":48,"column":0},"end":{"row":64,"column":0},"action":"remove","lines":["    @abstractmethod","    def create_reaction_to_post(","        self, user_id: int, post_id: int,","        reaction_type: ReactionTypeEnum","    ):","        pass","","    @abstractmethod","    def undo_post_reaction(self, user_id: int, post_id: int):","        pass","","    @abstractmethod","    def update_post_reaction(self, user_id: int, post_id: int,","                             reaction_type: ReactionTypeEnum):","        pass","",""],"id":26}],[{"start":{"row":48,"column":0},"end":{"row":48,"column":1},"action":"insert","lines":["\\"],"id":27}],[{"start":{"row":48,"column":0},"end":{"row":48,"column":1},"action":"remove","lines":["\\"],"id":28}],[{"start":{"row":48,"column":0},"end":{"row":62,"column":0},"action":"remove","lines":["    @abstractmethod","    def create_reaction_to_comment(self, user_id: int, comment_id: int,","                                    reaction_type: ReactionTypeEnum):","        pass","","    @abstractmethod","    def undo_comment_reaction(self, user_id: int, comment_id: int):","        pass","","    @abstractmethod","    def update_comment_reaction(self, user_id: int, comment_id: int,","                             reaction_type: ReactionTypeEnum):","        pass","",""],"id":29}],[{"start":{"row":48,"column":0},"end":{"row":63,"column":0},"action":"remove","lines":["    @abstractmethod","    def get_total_reaction_count_dto(self) ->TotalReactionCountDto:","        pass","","    @abstractmethod","    def get_reaction_metrics_dto(self, post_id: int) ->List[ReactionMetricsDto]:","        pass","","    @abstractmethod","    def get_posts_with_more_positive_reactions(self) ->List[Optional[int]]:","        pass","","    @abstractmethod","    def get_posts_reacted_by_user(self, user_id:int) ->List[Optional[int]]:","        pass",""],"id":30}],[{"start":{"row":48,"column":0},"end":{"row":59,"column":12},"action":"remove","lines":["","    @abstractmethod","    def get_reactions_to_post_dto(self, post_id: int) ->List[PostReactionsDto]:","        pass","","    @abstractmethod","    def get_post_dto(self, post_id: int) ->PostCompleteDetailsDto:","        pass","","    @abstractmethod","    def get_user_posts_dto(self, user_id: int) ->List[PostCompleteDetailsDto]:# -done returning type","        pass"],"id":31},{"start":{"row":47,"column":0},"end":{"row":48,"column":0},"action":"remove","lines":["",""]}],[{"start":{"row":14,"column":0},"end":{"row":14,"column":4},"action":"remove","lines":["    "],"id":32},{"start":{"row":13,"column":0},"end":{"row":14,"column":0},"action":"remove","lines":["",""]}],[{"start":{"row":8,"column":44},"end":{"row":8,"column":45},"action":"remove","lines":["o"],"id":33},{"start":{"row":8,"column":43},"end":{"row":8,"column":44},"action":"remove","lines":["t"]},{"start":{"row":8,"column":42},"end":{"row":8,"column":43},"action":"remove","lines":["D"]},{"start":{"row":8,"column":41},"end":{"row":8,"column":42},"action":"remove","lines":["t"]},{"start":{"row":8,"column":40},"end":{"row":8,"column":41},"action":"remove","lines":["n"]},{"start":{"row":8,"column":39},"end":{"row":8,"column":40},"action":"remove","lines":["u"]},{"start":{"row":8,"column":38},"end":{"row":8,"column":39},"action":"remove","lines":["o"]},{"start":{"row":8,"column":37},"end":{"row":8,"column":38},"action":"remove","lines":["C"]},{"start":{"row":8,"column":36},"end":{"row":8,"column":37},"action":"remove","lines":["n"]},{"start":{"row":8,"column":35},"end":{"row":8,"column":36},"action":"remove","lines":["o"]},{"start":{"row":8,"column":34},"end":{"row":8,"column":35},"action":"remove","lines":["i"]},{"start":{"row":8,"column":33},"end":{"row":8,"column":34},"action":"remove","lines":["t"]},{"start":{"row":8,"column":32},"end":{"row":8,"column":33},"action":"remove","lines":["c"]},{"start":{"row":8,"column":31},"end":{"row":8,"column":32},"action":"remove","lines":["a"]},{"start":{"row":8,"column":30},"end":{"row":8,"column":31},"action":"remove","lines":["e"]},{"start":{"row":8,"column":29},"end":{"row":8,"column":30},"action":"remove","lines":["R"]},{"start":{"row":8,"column":28},"end":{"row":8,"column":29},"action":"remove","lines":["l"]}],[{"start":{"row":8,"column":27},"end":{"row":8,"column":28},"action":"remove","lines":["a"],"id":34},{"start":{"row":8,"column":26},"end":{"row":8,"column":27},"action":"remove","lines":["t"]},{"start":{"row":8,"column":25},"end":{"row":8,"column":26},"action":"remove","lines":["o"]},{"start":{"row":8,"column":24},"end":{"row":8,"column":25},"action":"remove","lines":["T"]},{"start":{"row":8,"column":23},"end":{"row":8,"column":24},"action":"remove","lines":[" "]},{"start":{"row":8,"column":22},"end":{"row":8,"column":23},"action":"remove","lines":[","]},{"start":{"row":8,"column":21},"end":{"row":8,"column":22},"action":"remove","lines":["o"]},{"start":{"row":8,"column":20},"end":{"row":8,"column":21},"action":"remove","lines":["t"]},{"start":{"row":8,"column":19},"end":{"row":8,"column":20},"action":"remove","lines":["D"]},{"start":{"row":8,"column":18},"end":{"row":8,"column":19},"action":"remove","lines":["s"]},{"start":{"row":8,"column":17},"end":{"row":8,"column":18},"action":"remove","lines":["c"]},{"start":{"row":8,"column":16},"end":{"row":8,"column":17},"action":"remove","lines":["i"]},{"start":{"row":8,"column":15},"end":{"row":8,"column":16},"action":"remove","lines":["r"]},{"start":{"row":8,"column":14},"end":{"row":8,"column":15},"action":"remove","lines":["t"]},{"start":{"row":8,"column":13},"end":{"row":8,"column":14},"action":"remove","lines":["e"]},{"start":{"row":8,"column":12},"end":{"row":8,"column":13},"action":"remove","lines":["M"]},{"start":{"row":8,"column":11},"end":{"row":8,"column":12},"action":"remove","lines":["n"]},{"start":{"row":8,"column":10},"end":{"row":8,"column":11},"action":"remove","lines":["o"]},{"start":{"row":8,"column":9},"end":{"row":8,"column":10},"action":"remove","lines":["i"]},{"start":{"row":8,"column":8},"end":{"row":8,"column":9},"action":"remove","lines":["t"]}],[{"start":{"row":8,"column":7},"end":{"row":8,"column":8},"action":"remove","lines":["c"],"id":35},{"start":{"row":8,"column":6},"end":{"row":8,"column":7},"action":"remove","lines":["a"]},{"start":{"row":8,"column":5},"end":{"row":8,"column":6},"action":"remove","lines":["e"]},{"start":{"row":8,"column":4},"end":{"row":8,"column":5},"action":"remove","lines":["R"]},{"start":{"row":8,"column":0},"end":{"row":8,"column":4},"action":"remove","lines":["    "]},{"start":{"row":7,"column":64},"end":{"row":8,"column":0},"action":"remove","lines":["",""]}],[{"start":{"row":7,"column":63},"end":{"row":7,"column":64},"action":"remove","lines":[","],"id":36},{"start":{"row":7,"column":62},"end":{"row":7,"column":63},"action":"remove","lines":["o"]},{"start":{"row":7,"column":61},"end":{"row":7,"column":62},"action":"remove","lines":["t"]},{"start":{"row":7,"column":60},"end":{"row":7,"column":61},"action":"remove","lines":["D"]},{"start":{"row":7,"column":59},"end":{"row":7,"column":60},"action":"remove","lines":["s"]},{"start":{"row":7,"column":58},"end":{"row":7,"column":59},"action":"remove","lines":["l"]},{"start":{"row":7,"column":57},"end":{"row":7,"column":58},"action":"remove","lines":["i"]},{"start":{"row":7,"column":56},"end":{"row":7,"column":57},"action":"remove","lines":["a"]},{"start":{"row":7,"column":55},"end":{"row":7,"column":56},"action":"remove","lines":["t"]},{"start":{"row":7,"column":54},"end":{"row":7,"column":55},"action":"remove","lines":["e"]},{"start":{"row":7,"column":53},"end":{"row":7,"column":54},"action":"remove","lines":["D"]},{"start":{"row":7,"column":52},"end":{"row":7,"column":53},"action":"remove","lines":["e"]},{"start":{"row":7,"column":51},"end":{"row":7,"column":52},"action":"remove","lines":["t"]},{"start":{"row":7,"column":50},"end":{"row":7,"column":51},"action":"remove","lines":["e"]},{"start":{"row":7,"column":49},"end":{"row":7,"column":50},"action":"remove","lines":["l"]},{"start":{"row":7,"column":48},"end":{"row":7,"column":49},"action":"remove","lines":["p"]},{"start":{"row":7,"column":47},"end":{"row":7,"column":48},"action":"remove","lines":["m"]}],[{"start":{"row":7,"column":46},"end":{"row":7,"column":47},"action":"remove","lines":["o"],"id":37},{"start":{"row":7,"column":45},"end":{"row":7,"column":46},"action":"remove","lines":["C"]},{"start":{"row":7,"column":44},"end":{"row":7,"column":45},"action":"remove","lines":["t"]},{"start":{"row":7,"column":43},"end":{"row":7,"column":44},"action":"remove","lines":["s"]},{"start":{"row":7,"column":42},"end":{"row":7,"column":43},"action":"remove","lines":["o"]},{"start":{"row":7,"column":41},"end":{"row":7,"column":42},"action":"remove","lines":["P"]},{"start":{"row":7,"column":40},"end":{"row":7,"column":41},"action":"remove","lines":[" "]},{"start":{"row":7,"column":39},"end":{"row":7,"column":40},"action":"remove","lines":[","]}],[{"start":{"row":7,"column":20},"end":{"row":7,"column":21},"action":"remove","lines":[","],"id":38}],[{"start":{"row":7,"column":20},"end":{"row":7,"column":21},"action":"remove","lines":[" "],"id":39},{"start":{"row":7,"column":19},"end":{"row":7,"column":20},"action":"remove","lines":["o"]},{"start":{"row":7,"column":18},"end":{"row":7,"column":19},"action":"remove","lines":["t"]},{"start":{"row":7,"column":17},"end":{"row":7,"column":18},"action":"remove","lines":["D"]},{"start":{"row":7,"column":16},"end":{"row":7,"column":17},"action":"remove","lines":["s"]},{"start":{"row":7,"column":15},"end":{"row":7,"column":16},"action":"remove","lines":["n"]},{"start":{"row":7,"column":14},"end":{"row":7,"column":15},"action":"remove","lines":["o"]},{"start":{"row":7,"column":13},"end":{"row":7,"column":14},"action":"remove","lines":["i"]},{"start":{"row":7,"column":12},"end":{"row":7,"column":13},"action":"remove","lines":["t"]},{"start":{"row":7,"column":11},"end":{"row":7,"column":12},"action":"remove","lines":["c"]},{"start":{"row":7,"column":10},"end":{"row":7,"column":11},"action":"remove","lines":["a"]},{"start":{"row":7,"column":9},"end":{"row":7,"column":10},"action":"remove","lines":["e"]},{"start":{"row":7,"column":8},"end":{"row":7,"column":9},"action":"remove","lines":["R"]},{"start":{"row":7,"column":7},"end":{"row":7,"column":8},"action":"remove","lines":["t"]},{"start":{"row":7,"column":6},"end":{"row":7,"column":7},"action":"remove","lines":["s"]},{"start":{"row":7,"column":5},"end":{"row":7,"column":6},"action":"remove","lines":["o"]}],[{"start":{"row":7,"column":4},"end":{"row":7,"column":5},"action":"remove","lines":["P"],"id":40}],[{"start":{"row":2,"column":23},"end":{"row":2,"column":24},"action":"remove","lines":[","],"id":41},{"start":{"row":2,"column":22},"end":{"row":2,"column":23},"action":"remove","lines":["t"]},{"start":{"row":2,"column":21},"end":{"row":2,"column":22},"action":"remove","lines":["c"]},{"start":{"row":2,"column":20},"end":{"row":2,"column":21},"action":"remove","lines":["i"]},{"start":{"row":2,"column":19},"end":{"row":2,"column":20},"action":"remove","lines":["D"]}],[{"start":{"row":2,"column":32},"end":{"row":2,"column":33},"action":"remove","lines":["l"],"id":42},{"start":{"row":2,"column":31},"end":{"row":2,"column":32},"action":"remove","lines":["a"]},{"start":{"row":2,"column":30},"end":{"row":2,"column":31},"action":"remove","lines":["n"]},{"start":{"row":2,"column":29},"end":{"row":2,"column":30},"action":"remove","lines":["o"]},{"start":{"row":2,"column":28},"end":{"row":2,"column":29},"action":"remove","lines":["i"]},{"start":{"row":2,"column":27},"end":{"row":2,"column":28},"action":"remove","lines":["t"]},{"start":{"row":2,"column":26},"end":{"row":2,"column":27},"action":"remove","lines":["p"]},{"start":{"row":2,"column":25},"end":{"row":2,"column":26},"action":"remove","lines":["O"]},{"start":{"row":2,"column":24},"end":{"row":2,"column":25},"action":"remove","lines":[" "]},{"start":{"row":2,"column":23},"end":{"row":2,"column":24},"action":"remove","lines":[","]}],[{"start":{"row":41,"column":4},"end":{"row":45,"column":0},"action":"remove","lines":["@abstractmethod","    def validate_comment_reaction_if_exists_get_reaction_type(","        self, user_id: int, comment_id: int)->ReactionTypeEnum:","        pass",""],"id":43}]]},"ace":{"folds":[],"scrolltop":123.5,"scrollleft":0,"selection":{"start":{"row":20,"column":46},"end":{"row":20,"column":46},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":6,"state":"start","mode":"ace/mode/python"}},"timestamp":1590062569638,"hash":"6019d4d5570c6cdb2663bba77bb0b79d4d5e5908"}