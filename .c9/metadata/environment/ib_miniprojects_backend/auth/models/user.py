{"filter":false,"title":"user.py","tooltip":"/ib_miniprojects_backend/auth/models/user.py","undoManager":{"mark":2,"position":2,"stack":[[{"start":{"row":4,"column":0},"end":{"row":7,"column":1},"action":"remove","lines":["from essentials_kit_management.constants.enums import (","    FormStatusEnum, TransactionTypeEnum, TransactionStatusEnum, ","    PaymentTypeEnum",")"],"id":2}],[{"start":{"row":11,"column":0},"end":{"row":88,"column":0},"action":"remove","lines":["","class Brand(models.Model):","    name = models.CharField(max_length=100)","    min_quantity = models.IntegerField(default=0)","    max_quantity = models.IntegerField()","    price_per_item = models.IntegerField()","","","class Item(models.Model):","    name = models.CharField(max_length=100)","    description = models.CharField(max_length=500)","    brand = models.ManyToManyField(Brand)","","","class Section(models.Model):","    name = models.CharField(max_length=100)","    description = models.TextField()","    items = models.ManyToManyField(Item)","","","class Form(models.Model):","    name = models.CharField(max_length=100)","    status = models.CharField(","        choices=[(status.name, status.value) for status in FormStatusEnum],","        max_length=10, null=True","        )","    description = models.TextField()","    close_date = models.DateTimeField(null=True)","    expected_delivery_date = models.DateTimeField(null=True)","    sections = models.ManyToManyField(Section)","","","class Order(models.Model):","    user = models.ForeignKey(User, on_delete=models.CASCADE)","    item = models.ForeignKey(Item, on_delete=models.CASCADE)","    brand = models.ForeignKey(Brand, on_delete=models.CASCADE)","    form = models.ForeignKey(Form, on_delete=models.CASCADE)","    section = models.ForeignKey(Section, on_delete=models.CASCADE)","    count = models.IntegerField(default=0)","    pending_count = models.IntegerField()","    out_of_stock = models.IntegerField()","","","class Transaction(models.Model):","    transaction_id = models.IntegerField(primary_key=True)","    user = models.ForeignKey(User, on_delete=models.CASCADE)","    date = models.DateTimeField(auto_now=True)","    amount = models.IntegerField(default=0)","    status = models.CharField(","        choices = [","                   (status.name, status.value)","                   for status in TransactionStatusEnum","                   ],","        max_length=50,","        default=TransactionStatusEnum.PENDING.value","        )","    transaction_type = models.CharField(","        choices = [","            (transaction_type.name, transaction_type.value)","                for transaction_type in TransactionTypeEnum","            ],","            max_length=50, default=TransactionTypeEnum.CREDITED.value","        )","    screen_shot = models.TextField()","    payment_type = models.CharField(","        choices = [","            (payment.name, payment.value)","            for payment in PaymentTypeEnum","            ],","            max_length=10","        )","    remark = models.CharField(max_length=100)","","","class Account(models.Model):","    upi_id = models.CharField(primary_key=True, max_length=50)","    account_holder = models.CharField(max_length=100)",""],"id":3},{"start":{"row":10,"column":0},"end":{"row":11,"column":0},"action":"remove","lines":["",""]}],[{"start":{"row":4,"column":0},"end":{"row":5,"column":0},"action":"remove","lines":["",""],"id":4},{"start":{"row":3,"column":0},"end":{"row":4,"column":0},"action":"remove","lines":["",""]}]]},"ace":{"folds":[],"scrolltop":0,"scrollleft":0,"selection":{"start":{"row":4,"column":0},"end":{"row":4,"column":0},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":0},"timestamp":1593410141055,"hash":"3c118aa87fa970b44ae71a697f1fab9773fc0b51"}